{
    "project": {
        "name": "UXC jquery components",
        "description": "The third party jquery UI components",
        "version": "0.1",
        "url": "http://uxc.btbtd.org/docs/uxc_docs/",
        "logo": "uxc.png"
    },
    "files": {
        "../comps/Calendar/UXC.Calendar.js": {
            "name": "../comps/Calendar/UXC.Calendar.js",
            "modules": {},
            "classes": {
                "UXC.Calendar": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1
            }
        },
        "../comps/Calendar/UXC.Calendar.pickMonth.js": {
            "name": "../comps/Calendar/UXC.Calendar.pickMonth.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.Calendar": 1
            },
            "namespaces": {}
        },
        "../comps/Calendar/UXC.Calendar.pickSeason.js": {
            "name": "../comps/Calendar/UXC.Calendar.pickSeason.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.Calendar": 1
            },
            "namespaces": {}
        },
        "../comps/Calendar/UXC.Calendar.pickWeek.js": {
            "name": "../comps/Calendar/UXC.Calendar.pickWeek.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.Calendar": 1
            },
            "namespaces": {}
        },
        "../comps/Form/Form.js": {
            "name": "../comps/Form/Form.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../comps/Form/UXC.Form.initAutoFill.js": {
            "name": "../comps/Form/UXC.Form.initAutoFill.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.Form": 1
            },
            "namespaces": {}
        },
        "../comps/Form/UXC.Form.initAutoSelect.js": {
            "name": "../comps/Form/UXC.Form.initAutoSelect.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.Form": 1
            },
            "namespaces": {}
        },
        "../comps/Form/UXC.Form.initCheckAll.js": {
            "name": "../comps/Form/UXC.Form.initCheckAll.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.Form": 1
            },
            "namespaces": {}
        },
        "../comps/Form/UXC.Form.initNumericStepper.js": {
            "name": "../comps/Form/UXC.Form.initNumericStepper.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.Form": 1
            },
            "namespaces": {}
        },
        "../comps/Form/UXC.Form.js": {
            "name": "../comps/Form/UXC.Form.js",
            "modules": {},
            "classes": {
                "UXC.Form": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1
            }
        },
        "../comps/LunarCalendar/LunarCalendar.js": {
            "name": "../comps/LunarCalendar/LunarCalendar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../comps/LunarCalendar/UXC.LunarCalendar.getFestival.js": {
            "name": "../comps/LunarCalendar/UXC.LunarCalendar.getFestival.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.LunarCalendar": 1
            },
            "namespaces": {}
        },
        "../comps/LunarCalendar/UXC.LunarCalendar.gregorianToLunar.js": {
            "name": "../comps/LunarCalendar/UXC.LunarCalendar.gregorianToLunar.js",
            "modules": {},
            "classes": {},
            "fors": {
                "UXC.LunarCalendar": 1
            },
            "namespaces": {}
        },
        "../comps/LunarCalendar/UXC.LunarCalendar.js": {
            "name": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "modules": {},
            "classes": {
                "UXC.LunarCalendar": 1,
                "UXC.LunarCalendar.View": 1,
                "UXC.LunarCalendar.Model": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1,
                "UXC.LunarCalendar": 1
            }
        },
        "../comps/Panel/Panel.js": {
            "name": "../comps/Panel/Panel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../comps/Panel/UXC.Dialog.js": {
            "name": "../comps/Panel/UXC.Dialog.js",
            "modules": {},
            "classes": {
                "UXC.Dialog": 1,
                "UXC.Dialog.alert": 1,
                "UXC.Dialog.confirm": 1,
                "UXC.Dialog.mask": 1
            },
            "fors": {
                "UXC.Dialog": 1
            },
            "namespaces": {
                "UXC": 1,
                "UXC.Dialog": 1
            }
        },
        "../comps/Panel/UXC.Panel.js": {
            "name": "../comps/Panel/UXC.Panel.js",
            "modules": {},
            "classes": {
                "UXC.Panel": 1,
                "UXC.Panel.Model": 1,
                "UXC.hideAllPanel": 1
            },
            "fors": {
                "View": 1
            },
            "namespaces": {
                "UXC": 1,
                "UXC.Panel": 1
            }
        },
        "../comps/Panel/UXC.Popup.js": {
            "name": "../comps/Panel/UXC.Popup.js",
            "modules": {},
            "classes": {
                "UXC.alert": 1,
                "UXC.confirm": 1,
                "UXC.hideAllPopup": 1
            },
            "fors": {
                "UXC.alert": 1
            },
            "namespaces": {
                "UXC": 1
            }
        },
        "../comps/Slider/Slider.js": {
            "name": "../comps/Slider/Slider.js",
            "modules": {},
            "classes": {
                "UXC.Slider": 1,
                "UXC.Slider.Model": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1,
                "UXC.Slider": 1
            }
        },
        "../comps/Tab/Tab.js": {
            "name": "../comps/Tab/Tab.js",
            "modules": {},
            "classes": {
                "UXC.Tab": 1,
                "UXC.Tab.Model": 1,
                "UXC.Tab.View": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1,
                "UXC.Tab": 1
            }
        },
        "../comps/Test/Test.js": {
            "name": "../comps/Test/Test.js",
            "modules": {},
            "classes": {
                "UXC.Test": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1
            }
        },
        "../comps/Tips/Tips.js": {
            "name": "../comps/Tips/Tips.js",
            "modules": {},
            "classes": {
                "UXC.Tips": 1,
                "UXC.Tips.Model": 1,
                "UXC.Tips.View": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1,
                "UXC.Tips": 1
            }
        },
        "../comps/Tree/Tree.js": {
            "name": "../comps/Tree/Tree.js",
            "modules": {},
            "classes": {
                "UXC.Tree": 1,
                "UXC.Tree.Model": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1,
                "UXC.Tree": 1
            }
        },
        "../comps/Valid/Valid.js": {
            "name": "../comps/Valid/Valid.js",
            "modules": {},
            "classes": {
                "UXC.Valid": 1
            },
            "fors": {},
            "namespaces": {
                "UXC": 1
            }
        },
        "../plugins/rate/spec/lib/jasmine.js": {
            "name": "../plugins/rate/spec/lib/jasmine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../UXC.js": {
            "name": "../UXC.js",
            "modules": {},
            "classes": {
                "window.UXC": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "../common.js": {
            "name": "../common.js",
            "modules": {},
            "classes": {
                ".window": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../jquery.js": {
            "name": "../jquery.js",
            "modules": {},
            "classes": {
                "window.jQuery": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "../lib.js": {
            "name": "../lib.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "UXC.Calendar": {
            "name": "UXC.Calendar",
            "shortname": "UXC.Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 4,
            "description": "日期选择组件\n<br />全局访问请使用 UXC.Calendar 或 Calendar\n<br />DOM 加载完毕后\n, Calendar会自动初始化页面所有日历组件, input[type=text][datatype=date]标签\n<br />Ajax 加载内容后, 如果有日历组件需求的话, 需要手动使用Calendar.init( _selector )\n<br />_selector 可以是 新加载的容器, 也可以是新加载的所有input\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a>\n<br /><b>require</b>: <a href='.window.html#method_cloneDate'>window.cloneDate</a>\n<br /><b>require</b>: <a href='.window.html#method_parseISODate'>window.parseISODate</a>\n<br /><b>require</b>: <a href='.window.html#method_formatISODate'>window.formatISODate</a>\n<br /><b>require</b>: <a href='.window.html#method_maxDayOfMonth'>window.maxDayOfMonth</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameDay'>window.isSameDay</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameMonth'>window.isSameMonth</a>\n</p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Calendar.html' target='_blank'>API docs</a>\n| <a href='../../comps/Calendar/_demo/' target='_blank'>demo link</a></p>",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-06-04"
        },
        "UXC.Form": {
            "name": "UXC.Form",
            "shortname": "UXC.Form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Form/UXC.Form.js",
            "line": 3,
            "description": "表单常用功能类 UXC.Form\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Form.html' target='_blank'>API docs</a>\n| <a href='../../comps/Form/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-06-11"
        },
        "UXC.LunarCalendar": {
            "name": "UXC.LunarCalendar",
            "shortname": "UXC.LunarCalendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.LunarCalendar",
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 7,
            "description": "农历日历组件\n<br />全局访问请使用 UXC.LunarCalendar 或 LunarCalendar\n<br />DOM 加载完毕后\n, LunarCalendar会自动初始化页面所有具备识别符的日历, 目前可识别: div.js_LunarCalendar, td.js_LunarCalendar, li.js_LunarCalendar\n<br />Ajax 加载内容后, 如果有日历组件需求的话, 需要手动初始化 var ins = new UXC.LunarCalendar( _selector );\n<p>\n     初始化时, 如果日历是添加到某个selector里, 那么selector可以指定一些设置属性\n     <br /><b>hidecontrol</b>: 如果设置该属性, 那么日历将隐藏操作控件\n     <br /><b>minvalue</b>: 设置日历的有效最小选择范围, 格式YYYY-mm-dd\n     <br /><b>maxvalue</b>: 设置日历的有效最大选择范围, 格式YYYY-mm-dd\n     <br /><b>nopreviousfestivals</b>: 不显示上个月的节日\n     <br /><b>nonextfestivals</b>: 不显示下个月的节日\n</p>\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a>\n<br /><b>require</b>: <a href='.window.html#method_cloneDate'>window.cloneDate</a>\n<br /><b>require</b>: <a href='.window.html#method_parseISODate'>window.parseISODate</a>\n<br /><b>require</b>: <a href='.window.html#method_maxDayOfMonth'>window.maxDayOfMonth</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameDay'>window.isSameDay</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameMonth'>window.isSameMonth</a>\n</p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.LunarCalendar.html' target='_blank'>API docs</a>\n| <a href='../../comps/LunarCalendar/_demo/' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_container",
                    "description": "指定要显示日历的选择器, 如果不显示指定该值, 默认为 document.body",
                    "type": "Selector"
                },
                {
                    "name": "_date",
                    "description": "日历的当前日期, 如果不显示指定该值, 默认为当天",
                    "type": "Date"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-06-13"
        },
        "UXC.LunarCalendar.View": {
            "name": "UXC.LunarCalendar.View",
            "shortname": "UXC.LunarCalendar.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.LunarCalendar",
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 499,
            "description": "LunarCalendar 视图类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "UXC.LunarCalendar.Model"
                }
            ]
        },
        "UXC.LunarCalendar.Model": {
            "name": "UXC.LunarCalendar.Model",
            "shortname": "UXC.LunarCalendar.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.LunarCalendar",
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 693,
            "description": "LunarCalendar 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_container",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ]
        },
        "UXC.Dialog": {
            "name": "UXC.Dialog",
            "shortname": "UXC.Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Dialog",
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 5,
            "description": "带蒙板的会话弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='UXC.Panel.html'>Panel</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Dialog.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ],
            "return": {
                "description": "<a href='UXC.Panel.html'>UXC.Panel</a>"
            }
        },
        "UXC.Dialog.alert": {
            "name": "UXC.Dialog.alert",
            "shortname": "UXC.Dialog.alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Dialog",
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 57,
            "description": "会话框 alert 提示\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p>private property see: <a href='UXC.Dialog.html'>UXC.Dialog</a>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='UXC.Panel.html'>Panel</a>, <a href='UXC.Dialog.html'>Dialog</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Dialog.alert.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='UXC.Panel.html'>UXC.Panel</a>"
            }
        },
        "UXC.Dialog.confirm": {
            "name": "UXC.Dialog.confirm",
            "shortname": "UXC.Dialog.confirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Dialog",
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 86,
            "description": "会话框 confirm 提示\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p>private property see: <a href='UXC.Dialog.html'>UXC.Dialog</a>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='UXC.Panel.html'>Panel</a>, <a href='UXC.Dialog.html'>Dialog</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Dialog.confirm.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='UXC.Panel.html'>UXC.Panel</a>"
            }
        },
        "UXC.Dialog.mask": {
            "name": "UXC.Dialog.mask",
            "shortname": "UXC.Dialog.mask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Dialog",
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 115,
            "description": "显示或隐藏 蒙板\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_isHide",
                    "description": "空/假 显示蒙板, 为真 隐藏蒙板",
                    "type": "Bool"
                }
            ]
        },
        "UXC.Panel": {
            "name": "UXC.Panel",
            "shortname": "UXC.Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 5,
            "description": "弹出层基础类 UXC.Panel\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Panel.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-06-04",
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script>UXC.use( 'Panel' ); </script>\n           <script>\n               var btnstr = [\n                   '<div style=\"text-align:center\" class=\"UButton\">'\n                   , '<button type=\"button\" eventtype=\"confirm\">确定</button>'\n                   , '<button type=\"button\" eventtype=\"cancel\">取消</button>\\n'\n                   , '</div>'\n               ].join('');\n               $(document).ready( function(_evt){\n                   tmpPanel = new UXC.Panel( '默认panel', '<h2>test content</h2>' + btnstr, 'test footer');\n                   tmpPanel.on('close', function(_evt, _panel){\n                       UXC.log('user close evnet');\n                   });\n                   tmpPanel.show( 0 );\n               });\n           </script>"
            ]
        },
        "UXC.Panel.Model": {
            "name": "UXC.Panel.Model",
            "shortname": "UXC.Panel.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Panel",
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 458,
            "description": "存储 Panel 的基础数据类\n<br /><b>这个类为 Panel 的私有类</b>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ]
        },
        "UXC.Panel.View": {
            "name": "UXC.Panel.View",
            "shortname": "View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC"
        },
        "UXC.hideAllPanel": {
            "name": "UXC.hideAllPanel",
            "shortname": "UXC.hideAllPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 782,
            "description": "隐藏或者清除所有 Panel\n<h2>使用这个方法应当谨慎, 容易为DOM造成垃圾Panel</h2>\n<br /><b>注意</b>: 这是个方法, 写成class是为了方便生成文档",
            "is_constructor": 1,
            "static": 1,
            "params": [
                {
                    "name": "_isClose",
                    "description": "从DOM清除/隐藏所有Panel(包刮 UXC.alert, UXC.confirm, UXC.Panel, UXC.Dialog)\n                                    <br />, true = 从DOM 清除, false = 隐藏, 默认 = false( 隐藏 )",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n    UXC.hideAllPanel();         //隐藏所有Panel\n    UXC.hideAllPanel( true );   //从DOM 清除所有Panel"
            ]
        },
        "UXC.alert": {
            "name": "UXC.alert",
            "shortname": "UXC.alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 2,
            "description": "alert 提示 popup\n<br /> 这个是不带 蒙板的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='UXC.Panel.html'>Panel</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.alert.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='UXC.Panel.html'>UXC.Panel</a>"
            }
        },
        "UXC.confirm": {
            "name": "UXC.confirm",
            "shortname": "UXC.confirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 24,
            "description": "confirm 提示 popup\n<br /> 这个是不带 蒙板的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p>private property see: <a href='UXC.alert.html'>UXC.alert</a>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='UXC.Panel.html'>Panel</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.confirm.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='UXC.Panel.html'>UXC.Panel</a>"
            }
        },
        "UXC.hideAllPopup": {
            "name": "UXC.hideAllPopup",
            "shortname": "UXC.hideAllPopup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 47,
            "description": "隐藏 或 从DOM清除所有 UXC.alert/UXC.confirm\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_isClose",
                    "description": "为真从DOM清除UXC.alert/UXC.confirm, 为假隐藏, 默认为false",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n     UXC.hideAllPopup();         //隐藏所有UXC.alert, UXC.confirm\n     UXC.hideAllPopup( true );   //从 DOM 清除所有 UXC.alert, UXC.confirm"
            ]
        },
        "UXC.Slider": {
            "name": "UXC.Slider",
            "shortname": "UXC.Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Slider",
            "file": "../comps/Slider/Slider.js",
            "line": 6,
            "description": "Slider 划动菜单类\n<br />页面加载完毕后, Slider 会查找那些有 class = js_autoSlider 的标签进行自动初始化\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Slider.html' target='_blank'>API docs</a>\n| <a href='../../comps/Slider/_demo' target='_blank'>demo link</a></p>\n<p>\n     Slider 可以指定的一些常用 html 属性, 这个类的属性很多, 想了解得更详细看源码吧~\n     <br /><b>slidersubitems</b>: 指定具体子元素是那些, selector ( 子元素默认是 layout的子标签 )\n     <br /><b>sliderleft</b>: 左移的触发selector\n     <br /><b>sliderright</b>: 右移的触发selector\n     <br /><b>sliderwidth</b>: 主容器宽度\n     <br /><b>slideritemwidth</b>: 子元素的宽度\n     <br /><b>sliderhowmanyitem</b>: 每次滚动多少个子元素, 默认1\n     <br /><b>sliderdefaultpage</b>: 默认显示第几页\n     <br /><b>sliderstepms</b>: 滚动效果运动的间隔时间(毫秒), 默认 5\n     <br /><b>sliderdurationms</b>: 滚动效果的总时间\n\n     <br /><b>sliderdirection</b>: 滚动的方向, 默认 horizontal, { horizontal, vertical }\n     <br /><b>sliderloop</b>: 是否循环滚动\n     <br /><b>sliderinitedcb</b>: 初始完毕后的回调函数, 便于进行更详细的声明\n\n     <br /><b>sliderautomove</b>: 是否自动滚动\n     <br /><b>sliderautomovems</b>: 自动滚动的间隔\n</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-07-20",
            "example": [
                "\n           <style>\n               .hslide_list dd{ display: none; }\n\n               .hslide_list dd, .hslide_list dd img{\n                   width: 160px;\n                   height: 230px;\n               }\n\n               .slider_one_item dd, .slider_one_item dd img{\n                   width: 820px;\n                   height: 230px;\n               }\n           </style>\n           <link href='../../Slider/res/hslider/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               UXC.debug = true;\n               UXC.use( 'Slider' );\n\n               function sliderinitedcb(){\n                   var _sliderIns = this;\n\n                   UXC.log( 'sliderinitedcb', new Date().getTime() );\n\n                   _sliderIns.on('outmin', function(){\n                       UXC.log( 'slider outmin' );\n                   }).on('outmax', function(){\n                       UXC.log( 'slider outmax' );\n                   }).on('movedone', function( _evt, _oldpointer, _newpointer){\n                       UXC.log( 'slider movedone', _evt, _oldpointer, _newpointer );\n                   }).on('beforemove', function( _evt, _oldpointer, _newpointer ){\n                       UXC.log( 'slider beforemove', _evt, _oldpointer, _newpointer );\n                   });\n               }\n           </script>\n           <table class=\"hslide_wra\">\n               <tr>\n                   <td class=\"hslide_left\">\n                       <a href=\"javascript:\" hidefocus=\"true\" style=\"outline:none;\" class=\"js_slideleft\">左边滚动</a>\n                   </td>\n                   <td class=\"hslide_mid\">\n                       <dl \n                           style=\"width:820px; height: 230px; margin:0 5px;\"\n                           class=\"hslide_list clearfix js_slideList js_autoSlider\" \n                           slidersubitems=\"> dd\" sliderleft=\"a.js_slideleft\" sliderright=\"a.js_slideright\" \n                           sliderwidth=\"820\" slideritemwidth=\"160\"\n                           sliderdirection=\"horizontal\" sliderhowmanyitem=\"5\"\n                           sliderloop=\"false\" sliderdurationms=\"300\"\n                           sliderinitedcb=\"sliderinitedcb\"\n                           >\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                       </dl>\n                   </td>\n                   <td class=\"hslide_right\">\n                       <a href=\"javascript:\" hidefocus=\"true\" style=\"outline:none;\" class=\"js_slideright\">右边滚动</a>\n                   </td>\n               </tr>\n           </table>\n"
            ]
        },
        "UXC.Slider.Model": {
            "name": "UXC.Slider.Model",
            "shortname": "UXC.Slider.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Slider",
            "file": "../comps/Slider/Slider.js",
            "line": 401,
            "description": "Slider 的通用模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_layout",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        "UXC.Tab": {
            "name": "UXC.Tab",
            "shortname": "UXC.Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tab",
            "file": "../comps/Tab/Tab.js",
            "line": 5,
            "description": "Tab 菜单类\n<br />DOM 加载完毕后\n, 只要鼠标移动到具有识别符的Tab上面, Tab就会自动初始化, 目前可识别: <b>.js_autoTab</b>( CSS class )\n<br />需要手动初始化, 请使用: var ins = new UXC.Tab( _tabSelector );\n<p>\n     <b> Tab 容器的HTML属性 </b>\n     <br /><b>tablabels</b>: 声明 tab 标签的选择器语法\n     <br /><b>tabcontainers</b>: 声明 tab 容器的选择器语法\n     <br /><b>tabactiveclass</b>: 声明 tab当前标签的显示样式名, 默认为 cur\n     <br /><b>tablabelparent</b>: 声明 tab的当前显示样式是在父节点, 默认为 tab label 节点\n     <br /><b>tabactivecallback</b>: 当 tab label 被触发时的回调\n     <br /><b>tabchangecallback</b>: 当 tab label 变更时的回调\n</p>\n<p>\n     <b> Label(标签) 容器的HTML属性(AJAX) </b>\n     <br /><b>tabajaxurl</b>: ajax 请求的 URL 地址\n     <br /><b>tabajaxmethod</b>: ajax 请求的方法( get|post ), 默认 get\n     <br /><b>tabajaxdata</b>: ajax 请求的 数据, json\n     <br /><b>tabajaxcallback</b>: ajax 请求的回调\n</p>\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Tab.html' target='_blank'>API docs</a>\n| <a href='../../comps/Tab/_demo/' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的 Tab 选择器",
                    "type": "Selector|string"
                },
                {
                    "name": "_triggerTarget",
                    "description": "初始完毕后要触发的 label",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 75 Team",
            "date": "2013-07-04",
            "example": [
                "\n           <link href='../../../comps/Tab/res/default/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               UXC.debug = 1;\n               UXC.use( 'Tab' );\n\n               httpRequire();\n\n               function tabactive( _evt, _container, _tabIns ){\n                   var _label = $(this);\n                   UXC.log( 'tab ', _evt.type, _label.html(), new Date().getTime() );\n                   if( UXC.Tab.isAjax( _label ) && ! UXC.Tab.isAjaxInited( _label ) ){\n                       _container.html( '<h2>内容加载中...</h2>' );\n                   }\n               }\n\n               function tabchange( _container, _tabIns ){\n                   var _label = $(this);\n                   UXC.log( 'tab change: ', _label.html(), new Date().getTime() );\n               }\n\n               $(document).ready( function(){\n                   UXC.Tab.ajaxCallback =\n                       function( _data, _label, _container ){\n                           _data && ( _data = $.parseJSON( _data ) );\n                           if( _data && _data.errorno === 0 ){\n                               _container.html( printf( '<h2>UXC.Tab.ajaxCallback</h2>{0}', _data.data ) );\n                           }else{\n                               Tab.isAjaxInited( _label, 0 );\n                               _container.html( '<h2>内容加载失败!</h2>' );\n                           }\n                       };\n               });\n\n               function ajaxcallback( _data, _label, _container ){\n                   _data && ( _data = $.parseJSON( _data ) );\n                   if( _data && _data.errorno === 0 ){\n                       _container.html( printf( '<h2>label attr ajaxcallback</h2>{0}', _data.data ) );\n                   }else{\n                       Tab.isAjaxInited( _label, 0 );\n                       _container.html( '<h2>内容加载失败!</h2>' );\n                   }\n               };\n           </script>\n\n           <dl class=\"def\">\n               <dt>UXC.Tab 示例 - 静态内容</dt>\n               <dd>\n               <div class=\"le-tabview js_autoTab\" tablabels=\"ul.js_tabLabel > li > a\" tabcontainers=\"div.js_tabContent > div\" \n                                                   tabactiveclass=\"active\" tablabelparent=\"li\" \n                                                   tabactivecallback=\"tabactive\" tabchangecallback=\"tabchange\"\n                                                   >\n                       <ul class=\"le-tabs js_tabLabel\">\n                           <li class=\"active\"><a href=\"javascript:\">电视剧</a></li>\n                           <li><a href=\"javascript:\">电影</a></li>\n                           <li><a href=\"javascript:\">综艺</a></li>\n                           <li><a href=\"javascript:\">热点</a></li>\n                       </ul>\n                       <div class=\"views js_tabContent\">\n                           <div class=\"view-item active\">1. 集地议送能拿距还杨雷火，永鲜提只风超洋轻绿动视落清各只江执口。</div>\n                           <div class=\"view-item\">2. 相送黄血富打万念却烟会华它表本雷烟形烟消卷效难标否标滑固小实。</div>\n                           <div class=\"view-item\">3. 理往局背剧养认被站推简沉形括於穿短，精白自没路绿往优八益是入。</div>\n                           <div class=\"view-item\">4. 鲁杆格滑那双来班五材实死听顶脱本续克修先课丝另乡型茶父报孔图。</div>\n                       </div>\n                   </div>\n               </dd>\n           </dl>\n\n           <dl class=\"def\">\n               <dt>UXC.Tab 示例 - 动态内容 - AJAX</dt>\n               <dd>\n               <div class=\"le-tabview js_autoTab\" tablabels=\"ul.js_tabLabel2 > li > a\" tabcontainers=\"div.js_tabContent2 > div\" \n                                                   tabactiveclass=\"active\" tablabelparent=\"li\" \n                                                   tabactivecallback=\"tabactive\" tabchangecallback=\"tabchange\"\n                                                   >\n                       <ul class=\"le-tabs js_tabLabel2\">\n                           <li class=\"active\"><a href=\"javascript:\">电视剧</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" tabajaxmethod=\"post\" \n                                                     tabajaxdata=\"{a:1,b:2}\" tabajaxcallback=\"ajaxcallback\" >电影</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" tabajaxcallback=\"ajaxcallback\" >综艺</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" >热点</a></li>\n                       </ul>\n                       <div class=\"views js_tabContent2\">\n                           <div class=\"view-item active\">1. 集地议送能拿距还杨雷火，永鲜提只风超洋轻绿动视落清各只江执口。</div>\n                           <div class=\"view-item\"></div>\n                           <div class=\"view-item\"></div>\n                           <div class=\"view-item\"></div>\n                       </div>\n                   </div>\n               </dd>\n           </dl>"
            ]
        },
        "UXC.Tab.Model": {
            "name": "UXC.Tab.Model",
            "shortname": "UXC.Tab.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tab",
            "file": "../comps/Tab/Tab.js",
            "line": 288,
            "description": "Tab 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的 Tab 选择器",
                    "type": "Selector|string"
                },
                {
                    "name": "_triggerTarget",
                    "description": "初始完毕后要触发的 label",
                    "type": "Selector|string"
                }
            ]
        },
        "UXC.Tab.View": {
            "name": "UXC.Tab.View",
            "shortname": "UXC.Tab.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tab",
            "file": "../comps/Tab/Tab.js",
            "line": 539,
            "description": "Tab 视图模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "UXC.Tab.Model"
                }
            ]
        },
        "UXC.Test": {
            "name": "UXC.Test",
            "shortname": "UXC.Test",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Test/Test.js",
            "line": 6,
            "description": "Test 模板类\n<br />要新建一个组件时, 直接 copy Test 组件改一下命名就可以开始编码了\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Test.html' target='_blank'>API docs</a>\n| <a href='../../comps/Test/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-07-20",
            "example": [
                ""
            ]
        },
        "UXC.Tips": {
            "name": "UXC.Tips",
            "shortname": "UXC.Tips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tips",
            "file": "../comps/Tips/Tips.js",
            "line": 6,
            "description": "Tips 提示信息类\n<br />显示标签的 title/tipsData 属性 为 Tips 样式\n<p>导入该类后, 页面加载完毕后, 会自己初始化所有带 title/tipsData 属性的标签为 Tips效果的标签\n<br />如果要禁用自动初始化, 请把静态属性  Tips.autoInit 置为 false</p>\n<p><b>注意:</b> Tips 默认构造函数只处理单一标签\n<br />, 如果需要处理多个标签, 请使用静态方法 Tips.init( _selector )</p>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Tips.html' target='_blank'>API docs</a>\n| <a href='../../comps/Tips/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要显示 Tips 效果的标签, 这是单一标签, 需要显示多个请显示 Tips.init 方法",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-06-23",
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               UXC.use( 'Tips' );\n               $(document).ready( function(_evt){\n                   //默认是自动初始化, 也就是只要导入 UXC.Tips 就会自己初始化 带 title/tipsData 属性的标签\n                   //下面示例是手动初始化\n                   UXC.Tips.autoInit = false;\n                   UXC.Tips.init( $( 'a[title]' ) ); \n               });\n           </script>"
            ]
        },
        "UXC.Tips.Model": {
            "name": "UXC.Tips.Model",
            "shortname": "UXC.Tips.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tips",
            "file": "../comps/Tips/Tips.js",
            "line": 274,
            "description": "Tips 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        "UXC.Tips.View": {
            "name": "UXC.Tips.View",
            "shortname": "UXC.Tips.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tips",
            "file": "../comps/Tips/Tips.js",
            "line": 407,
            "description": "Tips 视图类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "UXC.Tips.Model"
                }
            ]
        },
        "UXC.Tree": {
            "name": "UXC.Tree",
            "shortname": "UXC.Tree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tree",
            "file": "../comps/Tree/Tree.js",
            "line": 4,
            "description": "树菜单类 UXC.Tree\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, \n<a href='.window.html#method_printf'>window.printf</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Tree.html' target='_blank'>API docs</a>\n| <a href='../../comps/Tree/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "树要显示的选择器",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "树菜单的数据",
                    "type": "Object"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-06-29",
            "example": [
                "\n           <link href='../../../comps/Tree/res/default/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               UXC.use( 'Tree' );\n               $(document).ready( function(){\n                   var treeData = {\n                       data: {\"24\":[[\"25\",\"\\u4e8c\\u7ec4\\u4e00\\u961f\"],[\"26\",\"\\u4e8c\\u7ec4\\u4e8c\\u961f\"],[\"27\",\"\\u4e8c\\u7ec4\\u4e09\\u961f\"]],\"23\":[[\"28\",\"\\u9500\\u552e\\u4e8c\\u7ec4\"],[\"24\",\"\\u552e\\u524d\\u5ba1\\u6838\\u7ec4\"]]},\n                       root: [\"23\",'客户发展部']\n                   };\n                   var _tree = new UXC.Tree( $('#tree_box2'), treeData );\n                       _tree.on('RenderLabel', function( _data ){\n                           var _node = $(this);\n                           _node.html( printf( '<a href=\"javascript:\" dataid=\"{0}\">{1}</a>', _data[0], _data[1] ) );\n                       });\n                       _tree.on('click', function( _evt ){\n                           var _p = $(this);\n                           UXC.log( 'tree click:', _p.html(), _p.attr('dataid'), _p.attr('dataname') );\n                       });\n                       _tree.init();\n                       //_queryNode && _tree.open( _queryNode );\n               });\n           </script>\n           <div id=\"tree_box2\" class=\"tree_container\"></div>"
            ]
        },
        "UXC.Tree.Model": {
            "name": "UXC.Tree.Model",
            "shortname": "UXC.Tree.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC.Tree",
            "file": "../comps/Tree/Tree.js",
            "line": 239,
            "description": "树的数据模型类",
            "is_constructor": 1
        },
        "UXC.Valid": {
            "name": "UXC.Valid",
            "shortname": "UXC.Valid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "UXC",
            "file": "../comps/Valid/Valid.js",
            "line": 4,
            "description": "表单验证\n<br />全局访问请使用 UXC.Valid 或 Valid\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/UXC.Valid.html' target='_blank'>API docs</a>\n| <a href='../../comps/Valid/_demo/' target='_blank'>demo link</a></p>\n<h2>Form 的可用 html attribute</h2>\n<dl>\n <dt>errorabort = bool</dt>\n <dd>查检Form Control时, 如果发生错误是否继续检查下一个</dd>\n <dd>default = true</dd>\n</dl>\n<h2>Form Control的可用 html attribute</h2>\n<dl>\n     <dt>reqmsg = 错误提示</dt>\n     <dd>值不能为空</dd>\n\n     <dt>errmsg = 错误提示</dt>\n     <dd>格式错误, 但不验证为空的值</dd>\n\n     <dt>emel = selector</dt>\n     <dd>显示错误的selector</dd>\n\n     <dt>minlength = int(最小长度)</dt>\n     <dd>验证内容的最小长度, 但不验证为空的值</dd>\n\n     <dt>maxlength = int(最大长度)</dt>\n     <dd>验证内容的最大长度, 但不验证为空的值</dd>\n\n     <dt>minvalue = [number|ISO date](最小值)</dt>\n     <dd>验证内容的最小值, 但不验证为空的值</dd>\n\n     <dt>maxvalue = [number|ISO date](最大值)</dt>\n     <dd>验证内容的最大值, 但不验证为空的值</dd>\n\n     <dt>ignoreprocess = bool</dt>\n     <dd>验证表单时, 是否忽略</dd>\n     <dd>default = false</dd>\n\n     <dt>datatype: 常用数据类型</dt>\n     <dd><b>n:</b> 检查是否为正确的数字</dd>\n     <dd><b>n-i.f:</b> 检查数字格式是否附件要求, i[整数位数], f[浮点数位数], n-7.2 = 0.00 ~ 9999999.99</dd>\n     <dd>\n         <b>nrange:</b> 检查两个control的数值范围\n         <dl>\n             <dd>html attr <b>fromNEl:</b> 指定开始的 control</dd>\n             <dd>html attr <b>toNEl:</b> 指定结束的 control</dd>\n             <dd>如果不指定 fromNEl, toNEl, 默认是从父节点下面找到 nrange, 按顺序定为 fromNEl, toNEl</dd>\n         </dl>\n     </dd>\n     <dd><b>d:</b> 检查是否为正确的日期, YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD</dd>\n     <dd>\n         <b>daterange:</b> 检查两个control的日期范围\n         <dl>\n             <dd>html attr <b>fromNEl:</b> 指定开始的 control</dd>\n             <dd>html attr <b>toNEl:</b> 指定结束的 control</dd>\n             <dd>如果不指定 fromNEl, toNEl, 默认是从父节点下面找到 nrange, 按顺序定为 fromNEl, toNEl</dd>\n         </dl>\n     </dd>\n     <dd><b>time:</b> 是否为正确的时间, hh:mm:ss</dd>\n     <dd><b>minute:</b> 是否为正确的时间, hh:mm</dd>\n     <dd>\n         <b>bankcard:</b> 是否为正确的银行卡\n         <br />  格式为 d{19} | d{16} | 1111 1111 1111 1111 111 | 1111 1111 1111 1111111\n     </dd>\n     <dd>\n         <b>cnname:</b> 中文姓名\n         <br>格式: 汉字和大小写字母\n         <br>规则: 长度 2-32个字节, 非 ASCII 算2个字节\n     </dd>\n     <dd>\n         <b>username:</b> 注册用户名\n         <br>格式: a-zA-Z0-9_-\n         <br>规则: 首字母必须为 [a-zA-Z0-9], 长度 2 - 30\n     </dd>\n     <dd><b>idnumber:</b> 身份证号码, 15~18 位</dd>\n     <dd><b>mobilecode:</b> 手机号码, 11位, (13|14|15|16|18|19)[\\d]{9}</dd>\n     <dd><b>mobile:</b> mobilecode 的别名</dd>\n     <dd><b>mobilezonecode:</b> 带 国家代码的手机号码, [+国家代码] [零]11位数字</dd>\n     <dd><b>phonecode:</b> 电话号码, 7~8 位数字, [1-9][0-9]{6,7}</dd>\n     <dd><b>phone:</b> 带区号的电话号码, [区号][空格|空白|-]7~8位电话号码</dd>\n     <dd><b>phoneall:</b> 带国家代码, 区号, 分机号的电话号码, [+国家代码][区号][空格|空白|-]7~8位电话号码#1~6位</dd>\n     <dd><b>phonezone:</b> 电话区号, 3~4位数字</dd>\n     <dd><b>phoneext:</b> 电话分机号, 1~6位数字</dd>\n     <dd><b>mobilephone:</b> mobilecode | phone</dd>\n     <dd><b>mobilephoneall:</b> mobilezonecode | phoneall</dd>\n     <dd><b>reg:</b> 自定义正则校验, /正则规则/[igm]</dd>\n     <dd>\n         <b>vcode:</b> 验证码, 0-9a-zA-Z, 长度 默认为4\n         <br />可通过 vcode-[\\d], 指定验证码长度\n     </dd>\n     <dd>\n         <b>text:</b> 显示声明检查的内容为文本类型\n         <br />默认就是 text, 没有特殊原因其实不用显示声明\n     </dd>\n     <dd>\n         <b>bytetext:</b> 声明按字节检查文本长度\n         <br /> ASCII 算一个字符, 非 ASCII 算两个字符\n     </dd>\n     <dd><b>url:</b> URL 格式, ftp, http, https</dd>\n     <dd><b>domain:</b> 匹配域名, 宽松模式, 允许匹配 http(s), 且结尾允许匹配反斜扛(/)</dd>\n     <dd><b>stricdomain:</b> 匹配域名, 严格模式, 不允许匹配 http(s), 且结尾不允许匹配反斜扛(/)</dd>\n     <dd><b>email:</b> 电子邮件</dd>\n     <dd><b>zipcode:</b> 邮政编码, 0~6位数字</dd>\n\n     <dt>subdatatype: 特殊数据类型</dt>\n     <dd>\n         <dl>\n             <dt>alternative: N 个 Control 必须至少有一个非空的值</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=alternative]</dd>\n             <dd><b>alternativemsg:</b> N 选一的错误提示</dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>reconfirm: N 个 Control 的值必须保持一致</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=reconfirm]</dd>\n             <dd><b>reconfirmmsg:</b> 值不一致时的错误提示</dd>\n         </dl>\n     </dd>\n</dl>",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-05-22"
        },
        "window.UXC": {
            "name": "window.UXC",
            "shortname": "window.UXC",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window",
            "file": "../UXC.js",
            "line": 3,
            "description": "UXC jquery 组件库 资源调用控制类\n<br />这是一个单例模式, 全局访问使用 UXC 或 window.UXC\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/uxc_docs/classes/window.UXC.html' target='_blank'>API docs</a>\n| <a href='../../_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "example": [
                " \n     UXC.use( 组件名[,组件名] );"
            ],
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-05-22"
        },
        ".window": {
            "name": ".window",
            "shortname": ".window",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "../common.js",
            "line": 2,
            "static": 1
        },
        "window.jQuery": {
            "name": "window.jQuery",
            "shortname": "window.jQuery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window",
            "file": "../jquery.js",
            "line": 1,
            "description": "jQuery JavaScript Library v1.9.1\n<pre>http://jquery.com/\n\nIncludes Sizzle.js\nhttp://sizzlejs.com/\n\nCopyright 2005, 2012 jQuery Foundation, Inc. and other contributors\nReleased under the MIT license\nhttp://jquery.org/license\nDate: 2013-2-4</pre>",
            "global": ""
        }
    },
    "classitems": [
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 29,
            "description": "//TODO 添加事件响应机制",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 34,
            "description": "弹出日期选择框",
            "itemtype": "method",
            "name": "pickDate",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "需要显示日期选择框的input[text]",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <dl>\n                   <dd>\n                       <input type=\"text\" name=\"date6\" class=\"manualPickDate\" value=\"20110201\" />\n                       manual UXC.Calendar.pickDate\n                   </dd>\n                   <dd>\n                       <input type=\"text\" name=\"date7\" class=\"manualPickDate\" />\n                       manual UXC.Calendar.pickDate\n                   </dd>\n               </dl>\n               <script>\n                   $(document).delegate('input.manualPickDate', 'focus', function($evt){\n                   UXC.Calendar.pickDate( this );\n                   });\n               </script>"
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 73,
            "description": "初始化 _selector 中的所有日历组件",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "需要初始化的日历组件父容器/日期选择input选择器",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <script>\n                   $.post( url, function( _d ){\n                       _d = $(_d);\n                       _d.appendTo(body);\n                       UXC.Calendar.init( _d );\n                   });\n               </script>"
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 88,
            "description": "设置是否在 DOM 加载完毕后, 自动初始化所有日期控件",
            "itemtype": "property",
            "name": "autoInit",
            "default": "true",
            "type": "{bool}",
            "static": "<script>UXC.Calendar.autoInit = true;</script>",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 97,
            "description": "设置默认显示的年份数, 该数为前后各多少年 默认为前后各10年",
            "itemtype": "property",
            "name": "defaultDateSpan",
            "type": "{int}",
            "default": "20",
            "static": "<script>UXC.Calendar.defaultDateSpan = 20;</script>",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 106,
            "description": "最后一个显示日历组件的文本框",
            "itemtype": "property",
            "name": "Calendar.lastIpt",
            "type": "selector",
            "static": 1,
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 113,
            "description": "设置日历组件的显示位置",
            "itemtype": "method",
            "name": "Calendar.setPosition",
            "static": 1,
            "params": [
                {
                    "name": "_ipt",
                    "description": "需要显示日历组件的文本框",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 143,
            "description": "判断选择器是否为日历组件的对象",
            "itemtype": "method",
            "name": "Calendar.isCalendarElement",
            "static": 1,
            "params": [
                {
                    "name": "_selector!~YUIDOC_LINE~!return",
                    "description": "bool",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 168,
            "description": "初始化外观后的回调函数",
            "itemtype": "property",
            "name": "layoutInitedCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 176,
            "description": "日历隐藏后的回调函数",
            "itemtype": "property",
            "name": "layoutHideCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 184,
            "description": "DOM 点击的过滤函数\n<br />默认 dom 点击时, 判断事件源不为 input[datatype=date|daterange] 会隐藏 Calendar\n<br /> 通过该回调可自定义过滤, 返回 false 不执行隐藏操作",
            "itemtype": "property",
            "name": "domClickFilter",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 194,
            "description": "隐藏日历组件",
            "itemtype": "method",
            "name": "hide",
            "static": 1,
            "example": [
                "\n               <script>UXC.Calendar.hide();</script>"
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 206,
            "description": "获取初始日期对象",
            "itemtype": "method",
            "name": "Calendar.getDate",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "显示日历组件的input\nreturn   Object  { date: 0, minvalue: 0, maxvalue: 0, initMinvalue: 0, initMaxvalue: 0 }",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 244,
            "description": "每周的中文对应数字",
            "itemtype": "property",
            "name": "cnWeek",
            "type": "string",
            "static": 1,
            "default": "日一二三四五六",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 252,
            "description": "100以内的中文对应数字",
            "itemtype": "property",
            "name": "cnUnit",
            "type": "string",
            "static": 1,
            "default": "十一二三四五六七八九",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 260,
            "description": "转换 100 以内的数字为中文数字",
            "itemtype": "method",
            "name": "getCnNum",
            "static": 1,
            "params": [
                {
                    "name": "_num",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 274,
            "description": "自定义日历组件模板\n<p>默认模板为_logic.tpl</p>\n<p>如果用户显示定义UXC.Calendar.tpl的话, 将采用用户的模板</p>",
            "itemtype": "property",
            "name": "tpl",
            "type": "{string}",
            "default": "empty",
            "static": 1,
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 285,
            "description": "私有逻辑处理对象, 基本上所有逻辑方法都存放于此对象",
            "itemtype": "property",
            "name": "_logic",
            "type": "{Object}",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 294,
            "description": "初始化日历组件的触发按钮",
            "itemtype": "method",
            "name": "_logic.initTrigger",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 323,
            "description": "最后一个显示日历组件的日期对象",
            "itemtype": "property",
            "name": "_logic.lastDateObj",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 330,
            "description": "显示日历组件",
            "itemtype": "method",
            "name": "_logic.pickDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "input[type=text][datatype=date]",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 351,
            "description": "初始化日历组件的所有日期\n     _dateObj = { date: date, minvalue: date, maxvalue: date, initMinvalue: date, initMaxvalue: date };",
            "itemtype": "method",
            "name": "_logic.initDateLayout",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "保存所有相关日期的对象",
                    "type": "DateObjects"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 366,
            "description": "初始化月份的所有日期",
            "itemtype": "method",
            "name": "_logic.initMonthDate",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "保存所有相关日期的对象",
                    "type": "DateObjects"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 420,
            "description": "初始化月份",
            "itemtype": "method",
            "name": "_logic.initMonth",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "保存所有相关日期的对象",
                    "type": "DateObjects"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 431,
            "description": "初始化年份",
            "itemtype": "method",
            "name": "_logic.initYear",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "保存所有相关日期的对象",
                    "type": "DateObjects"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 455,
            "description": "按年份更改日期",
            "itemtype": "method",
            "name": "_logic.updateYear",
            "params": [
                {
                    "name": "_year",
                    "description": "新的年份, YYYY",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 475,
            "description": "按月份更改日期",
            "itemtype": "method",
            "name": "_logic.setNewMonth",
            "params": [
                {
                    "name": "_month",
                    "description": "新的月份, mm",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 496,
            "description": "获取日历组件的外观",
            "itemtype": "method",
            "name": "_logic.getLayout",
            "return": {
                "description": "日历组件的selector",
                "type": "Selector"
            },
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 530,
            "description": "把日期赋值给文本框",
            "itemtype": "method",
            "name": "_logic.setDate",
            "params": [
                {
                    "name": "_timestamp",
                    "description": "日期对象的时间戳",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 549,
            "description": "给文本框赋值, 日期为控件的当前日期",
            "itemtype": "method",
            "name": "_logic.onConfirm",
            "return": {
                "description": "0/1",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 563,
            "description": "日历组件模板\n<p>这是默认模板, 用户可以给 UXC.Calendar.tpl 赋值, 更改为自己的模板</p>",
            "itemtype": "property",
            "name": "_logic.tpl",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 614,
            "description": "DOM 加载完毕后, 初始化日历组件相关事件",
            "itemtype": "event",
            "name": "dom ready",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 620,
            "description": "延迟200毫秒初始化页面的所有日历控件\n之所以要延迟是可以让用户自己设置是否需要自动初始化",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 628,
            "description": "捕获用户更改年份 \n<p>监听 年份下拉框</p>",
            "itemtype": "event",
            "name": "year change",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 638,
            "description": "捕获用户更改年份 \n<p>监听 下一年按钮</p>",
            "itemtype": "event",
            "name": "next year",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 648,
            "description": "捕获用户更改年份 \n<p>监听 上一年按钮</p>",
            "itemtype": "event",
            "name": "previous year",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 658,
            "description": "捕获用户更改月份\n<p>监听 月份下拉框</p>",
            "itemtype": "event",
            "name": "month change",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 667,
            "description": "选择当前日期\n<p>监听确定按钮</p>",
            "itemtype": "event",
            "name": "confirm click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 681,
            "description": "增加或者减少一年\n<p>监听 年份map</p>",
            "itemtype": "event",
            "name": "year map click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 699,
            "description": "增加或者减少一个月\n<p>监听 月份map</p>",
            "itemtype": "event",
            "name": "month map click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 721,
            "description": "清除文本框内容\n<p>监听 清空按钮</p>",
            "itemtype": "event",
            "name": "clear click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 730,
            "description": "取消日历组件, 相当于隐藏\n<p>监听 取消按钮</p>",
            "itemtype": "event",
            "name": "cancel click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 739,
            "description": "dom 点击时, 检查事件源是否为日历组件对象, 如果不是则会隐藏日历组件",
            "itemtype": "event",
            "name": "dom click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 760,
            "description": "日历组件按钮点击事件",
            "itemtype": "event",
            "name": "calendar button click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 768,
            "description": "日历组件文本框获得焦点",
            "itemtype": "event",
            "name": "input focus",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 776,
            "description": "日历组件点击事件, 阻止冒泡, 防止被 document click事件隐藏",
            "itemtype": "event",
            "name": "UXCCalendar click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 784,
            "description": "日期点击事件",
            "itemtype": "event",
            "name": "date click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.js",
            "line": 800,
            "description": "监听窗口滚动和改变大小, 实时变更日历组件显示位置",
            "itemtype": "event",
            "name": "window scroll, window resize",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickMonth.js",
            "line": 2,
            "description": "弹出一年中所有月份的选择框",
            "itemtype": "method",
            "name": "pickMonth",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickMonth.js",
            "line": 15,
            "description": "自定义月份弹框的模板HTML",
            "itemtype": "property",
            "name": "pickMonth.tpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickMonth.js",
            "line": 151,
            "description": "最后一个显示日历组件的日期对象",
            "itemtype": "property",
            "name": "_logic.lastDateObj",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickSeason.js",
            "line": 2,
            "description": "弹出一年中所有季度的选择框",
            "itemtype": "method",
            "name": "pickSeason",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickSeason.js",
            "line": 15,
            "description": "自定义周弹框的模板HTML",
            "itemtype": "property",
            "name": "pickSeason.tpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickSeason.js",
            "line": 159,
            "description": "最后一个显示日历组件的日期对象",
            "itemtype": "property",
            "name": "_logic.lastDateObj",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickWeek.js",
            "line": 2,
            "description": "弹出一年中所有周的选择框",
            "itemtype": "method",
            "name": "pickWeek",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickWeek.js",
            "line": 15,
            "description": "自定义周弹框的模板HTML",
            "itemtype": "property",
            "name": "pickWeek.tpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickWeek.js",
            "line": 24,
            "description": "自定义周日历每周的起始日期 \n<br /> 0 - 6, 0=周日, 1=周一",
            "itemtype": "property",
            "name": "pickWeek.dayOffset",
            "static": 1,
            "type": "int",
            "default": "1",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickWeek.js",
            "line": 168,
            "description": "最后一个显示日历组件的日期对象",
            "itemtype": "property",
            "name": "_logic.lastDateObj",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickWeek.js",
            "line": 194,
            "description": "取一年中所有的星期, 及其开始结束日期",
            "itemtype": "method",
            "name": "weekOfYear",
            "static": 1,
            "params": [
                {
                    "name": "_year",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_dayOffset",
                    "description": "每周的默认开始为周几, 默认0(周日)",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Array"
            },
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Calendar/UXC.Calendar.pickWeek.js",
            "line": 206,
            "description": "元旦开始的第一个星期一开始的一周为政治经济上的第一周",
            "class": "UXC.Calendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 2,
            "description": "取当前脚本标签的 src路径",
            "author": "scuehs@btbtd.org 2013-05-23",
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoFill.js",
            "line": 2,
            "description": "表单自动填充 URL GET 参数\n<br />只要引用本脚本, DOM 加载完毕后, 页面上所有带 class js_autoFillUrlForm 的 form 都会自动初始化默认值\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/suchesqiu/360UXC.git' target='_blank'>UXC Project Site</a>\n| <a href='http://uxc.btbtd.org/docs/uxc_docs/classes/UXC.Form.html' target='_blank'>API docs</a>",
            "itemtype": "method",
            "name": "initAutoFill",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-06-13",
            "params": [
                {
                    "name": "_selector",
                    "description": "显示指定要初始化的区域, 默认为 document",
                    "type": "Selector|url string"
                },
                {
                    "name": "_url",
                    "description": "显示指定, 取初始化值的 URL, 默认为 location.href",
                    "type": "String"
                }
            ],
            "example": [
                "\n     UXC.Form.initAutoFill( myCustomSelector, myUrl );"
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoFill.js",
            "line": 52,
            "description": "自定义 URI decode 函数",
            "itemtype": "property",
            "name": "initAutoFill.decodeFunc",
            "static": 1,
            "type": "function",
            "default": "null",
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoFill.js",
            "line": 68,
            "description": "判断下拉框的option里是否有给定的值",
            "itemtype": "method",
            "name": "initAutoFill.selectHasVal",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_select",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_val",
                    "description": "要查找的值",
                    "type": "String"
                }
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 2,
            "description": "初始化 级联下拉框\n<br />只要引用本脚本, 页面加载完毕时就会自动初始化级联下拉框功能\n<br /><br />动态添加的 DOM 需要显式调用 AutoSelect( domSelector ) 进行初始化\n<br /><br />要使页面上的级联下拉框功能能够自动初始化, 需要在select标签上加入一些HTML 属性\n<br /><b>defaultselect</b>: none, 该属性声明这是级联下拉框的第一个下拉框, <b>这是必填项,初始化时以这个为入口</b>\n<br /><b>selectvalue</b>: string, 下拉框的默认选中值\n<br /><b>selecturl</b>: string, 下拉框的数据请求接口, 符号 {0} 代表下拉框值的占位符\n<br /><b>selecttarget</b>: selector, 下一级下拉框的选择器语法\n<br /><b>defaultoption</b>: none, 声明默认 option 选项, 更新option时, 有该属性的项不会被清除\n<p>\n     数据格式: [ [id, name], [id, name] ... ]\n     <br /> 如果获取到的数据格式不是默认格式,\n     可以通过 <a href='UXC.Form.html#property_initAutoSelect.dataFilter'>AutoSelect.dataFilter</a> 属性自定义函数, 进行数据过滤\n</p>",
            "itemtype": "method",
            "name": "initAutoSelect",
            "static": 1,
            "version": "dev 0.2",
            "author": "qiushaowei   <suches@btbtd.org> | 360 75 Team",
            "date": "2013-07-28(.2), 2013-06-11(.1)",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的级联下拉框父级节点",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n       <h2>AJAX 返回内容</h2>\n       <code>\n           <dd>    \n               <select name='select102_1' defaultselect selecturl=\"data/shengshi_with_error_code.php?id=0\" selecttarget=\"select[name=select102_2]\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n               <select name='select102_2' selecturl=\"data/shengshi_with_error_code.php?id={0}\" selecttarget=\"select[name=select102_3]\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n               <select name='select102_3' selecturl=\"data/shengshi_with_error_code.php?id={0}\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n           </dd>\n       </code>\n       <script>\n           $.get( './data/shengshi_html.php?rnd='+new Date().getTime(), function( _r ){\n               var _selector = $(_r);\n               $( 'dl.def > dt' ).after( _selector );\n               UXC.Form.initAutoSelect( _selector );\n           });\n\n           UXC.Form.initAutoSelect.dataFilter = \n               function( _data, _select ){\n                   var _r = _data;\n                   if( _data && !_data.length && _data.data ){\n                       _r = _data.data;\n                   }\n                   return _r;\n               };\n       </script>"
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 72,
            "description": "判断 selector 是否为符合自动初始化联动框的要求",
            "itemtype": "method",
            "name": "initAutoSelect.isSelect",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 89,
            "description": "是否自动隐藏空值的级联下拉框, 起始下拉框不会被隐藏\n<br />这个是全局设置, 如果需要对具体某个select进行处理, 对应的 HTML 属性 selecthideempty",
            "itemtype": "property",
            "name": "initAutoSelect.hideEmpty",
            "type": "bool",
            "default": "false",
            "static": 1,
            "example": [
                "\n               AutoSelect.hideEmpty = true;"
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 100,
            "description": "级联下拉框的数据过滤函数\n<br />默认数据格式: [ [id, name], [id, name] ... ]\n<br />如果获取到的数据格式非默认格式, 可通过本函数进行数据过滤\n<p>\n <b>注意, 这个是全局过滤, 如果要使用该函数进行数据过滤, 判断逻辑需要比较具体</b>\n <br />如果要对具体 select 进行数据过滤, 可以使用HTML属性 selectdatafilter 指定过滤函数\n</p>",
            "itemtype": "property",
            "name": "initAutoSelect.dataFilter",
            "type": "function",
            "default": "null",
            "static": 1,
            "example": [
                "\n                AutoSelect.dataFilter = \n                   function( _data, _select ){\n                       var _r = _data;\n                       if( _data && !_data.length && _data.data ){\n                           _r = _data.data;\n                       }\n                       return _r;\n                   };"
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 123,
            "description": "下拉框初始化功能都是未初始化 数据之前的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectbeforeInited",
            "itemtype": "property",
            "name": "initAutoSelect.beforeInited",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 132,
            "description": "下拉框第一次初始完所有数据的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectinited",
            "itemtype": "property",
            "name": "initAutoSelect.inited",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 141,
            "description": "下拉框每个项数据变更后的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectchange",
            "itemtype": "property",
            "name": "initAutoSelect.change",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 150,
            "description": "下拉框所有项数据变更后的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectallchanged",
            "itemtype": "property",
            "name": "initAutoSelect.allChanged",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 159,
            "description": "第一次初始化所有联动框时, 是否触发 change 事件\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selecttriggerinitchange",
            "itemtype": "property",
            "name": "initAutoSelect.triggerInitChange",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 168,
            "description": "ajax 请求数据时, 是否添加随机参数防止缓存\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectrandomurl",
            "itemtype": "property",
            "name": "initAutoSelect.randomurl",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 177,
            "description": "处理 ajax url 的回调处理函数\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectprocessurl",
            "itemtype": "property",
            "name": "initAutoSelect.processUrl",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 186,
            "description": "获取或设置 selector 的实例引用",
            "itemtype": "method",
            "name": "initAutoSelect.getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "AutoSelectControlerInstance"
                }
            ],
            "return": {
                "description": "AutoSelectControlerInstance"
            },
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 583,
            "description": "判断下拉框的option里是否有给定的值",
            "params": [
                {
                    "name": "_select",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_val",
                    "description": "要查找的值",
                    "type": "String"
                }
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initAutoSelect.js",
            "line": 653,
            "description": "页面加载完毕时, 延时进行自动化, 延时可以避免来自其他逻辑的干扰",
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initCheckAll.js",
            "line": 2,
            "description": "初始化 checkbox 全选反选功能\n<br />只要引用本脚本, 页面加载完毕时就会自动初始化全选反选功能\n<br /><br />动态添加的 DOM 需要显式调用 UXC.Form.initCheckAll( domSelector ) 进行初始化\n<br /><br />要使页面上的全选反选功能能够自动初始化, 需要在全选反选按钮上加入一些HTML 属性\n<br /><b>checktype</b>: all | inverse, all=全选/全不选, inverse=反选\n<br /><b>checkfor</b>: selector, 要全选/反选的 checkbox 选择器语法\n<br /><b>checkall</b>: selector, 全选按钮的选择器, 这个只有反选按钮需要, 反选时变更全选按钮的状态",
            "itemtype": "method",
            "name": "initCheckAll",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 UXC-FE Team",
            "date": "2013-06-11",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的全选反选的父级节点",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <h2>AJAX data:</h2>\n           <dl class=\"def example24\">\n               <dt>checkall example 24</dt>\n               <dd>\n               <input type=\"checkbox\" id=\"checkall24\" checktype=\"all\" checkfor=\"dl.example24 input[type=checkbox]\"><label for=\"checkall24\">全选</label>\n               <input type=\"checkbox\" id=\"checkall24_inverse\" checktype=\"inverse\" checkfor=\"dl.example24 input[type=checkbox]\" checkall=\"dl.example24 input[checktype=all]\"><label for=\"checkall24_inverse\">反选</label>\n               </dd>\n               <dd>\n               <input type=\"checkbox\" id=\"checkall24_1\" value=\"\" name=\"\" checked />\n               <label for=\"checkall24_1\">checkall24_1</label>\n               <input type=\"checkbox\" id=\"checkall24_2\" value=\"\" name=\"\" checked />\n               <label for=\"checkall24_2\">checkall24_2</label>\n               <input type=\"checkbox\" id=\"checkall24_3\" value=\"\" name=\"\" checked />\n               <label for=\"checkall24_3\">checkall24_3</label>\n               <input type=\"checkbox\" id=\"checkall24_4\" value=\"\" name=\"\" checked />\n               <label for=\"checkall24_4\">checkall24_4</label>\n               <input type=\"checkbox\" id=\"checkall24_5\" value=\"\" name=\"\" checked />\n               <label for=\"checkall24_5\">checkall24_5</label>\n               </dd>\n           </dl>\n\n           <script>\n           $(document).delegate( 'button.js_ajaxTest', 'click', function(){\n               var _p = $(this);\n               _p.prop('disabled', true);\n               setTimeout( function(){ _p.prop('disabled', false); }, 1000 );\n\n               $.get( './data/initCheckAll.php?rnd='+new Date().getTime(), function( _r ){\n                   var _selector = $(_r);\n                   $( $( 'body' ).children().first() ).before( _selector );\n                   UXC.Form.initCheckAll( _selector );\n               });\n           });\n           </script>"
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initCheckAll.js",
            "line": 78,
            "description": "监听 全选/反选 按钮的点击事件",
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initCheckAll.js",
            "line": 116,
            "description": "判断 input 是否为 全选反选 按钮",
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initCheckAll.js",
            "line": 123,
            "description": "input 改变状态时, 全选按钮也改为正确的状态",
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initNumericStepper.js",
            "line": 2,
            "description": "文本框 值增减 应用\n<br />只要引用本脚本, 页面加载完毕时就会自动初始化 NumericStepper\n<br />所有带 class js_NStepperPlus, js_NStepperMinus 视为值加减按钮\n<br /><br />目标文本框可以添加一些HTML属性自己的规则, \n<br />nsminvalue=最小值(默认=0), nsmaxvalue=最大值(默认=100), nsstep=步长(默认=1), nsfixed=小数点位数(默认=0)\n<br />nschangecallback=值变改后的回调",
            "itemtype": "method",
            "name": "initNumericStepper",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 75 Team",
            "date": "2013-07-05",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的全选反选的父级节点",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n            <dl class=\"def example1\">\n               <dt>UXC.Form.initNumericStepper 默认值 0 - 100, step 1, fixed 0</dt>\n               <dd>\n                   <button class=\"NS_icon NS_minus js_NStepperMinus\" nstarget=\"input.js_ipt1\" ></button>\n                   <input type=\"text\" value=\"0\" class=\"js_ipt1\" />\n                   <button class=\"NS_icon NS_plus js_NStepperPlus\" nstarget=\"input.js_ipt1\" ></button>\n               </dd>\n           </dl>\n\n           <dl class=\"def example1\">\n               <dt>UXC.Form.initNumericStepper -10 ~ 10, step 2, fixed 2</dt>\n               <dd>\n                   <button class=\"NS_icon NS_minus js_NStepperMinus\" nstarget=\"input.js_ipt2\" ></button>\n                   <input type=\"text\" value=\"4\" class=\"js_ipt2\" nsminvalue=\"-10\" nsmaxvalue=\"10\" nsstep=\"2\" nsfixed=\"2\" />\n                   <button class=\"NS_icon NS_plus js_NStepperPlus\" nstarget=\"input.js_ipt2\" ></button>\n               </dd>\n           </dl>"
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.initNumericStepper.js",
            "line": 61,
            "description": "文本框 值增减 值变改后的回调\n<br />这个是定义全局的回调函数, 要定义局部回调请在目标文本框上添加 nschangecallback=回调 HTML属性",
            "itemtype": "property",
            "name": "initNumericStepper.onchange",
            "type": "function",
            "static": 1,
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Form/UXC.Form.js",
            "line": 17,
            "description": "禁用按钮一定时间, 默认为1秒",
            "itemtype": "method",
            "name": "disableButton",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要禁用button的选择器",
                    "type": "Selector"
                },
                {
                    "name": "_durationMs",
                    "description": "禁用多少时间, 单位毫秒, 默认1秒",
                    "type": "Int"
                }
            ],
            "class": "UXC.Form",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 2,
            "description": "取当前脚本标签的 src路径",
            "author": "scuehs@btbtd.org 2013-05-23",
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.getFestival.js",
            "line": 3,
            "description": "返回农历和国历的所在日期的所有节日\n<br /> 假日条目数据样例: { 'name': '春节', 'fullname': '春节', 'priority': 8 }\n<br /> 返回数据格式: { 'dayName': 农历日期/节日名, 'festivals': 节日数组, 'isHoliday': 是否为假日 }",
            "itemtype": "method",
            "name": "getFestivals",
            "static": 1,
            "params": [
                {
                    "name": "_lunarDate",
                    "description": "农历日期对象, 由UXC.LunarCalendar.gregorianToLunar 获取",
                    "type": "Object"
                },
                {
                    "name": "_greDate",
                    "description": "日期对象",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Object"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.getFestival.js",
            "line": 195,
            "description": "为数字添加前置0",
            "itemtype": "method",
            "name": "UXC.LunarCalendar.getFestival.intPad",
            "params": [
                {
                    "name": "_n",
                    "description": "需要添加前置0的数字",
                    "type": "Int"
                },
                {
                    "name": "_len",
                    "description": "需要添加_len个0, 默认为2",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.gregorianToLunar.js",
            "line": 2,
            "description": "从公历日期获得农历日期\n<br /> 返回的数据格式\n<pre>\n       {\n           shengxiao: ''   //生肖\n           , ganzhi: ''    //干支\n           , yue: ''       //月份\n           , ri: ''        //日\n           , shi: ''       //时\n           , year: ''      //农历数字年\n           , month: ''     //农历数字月\n           , day: ''       //农历数字天\n           , hour: ''      //农历数字时\n       };\n</pre>",
            "itemtype": "method",
            "name": "gregorianToLunar",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "要获取农历日期的时间对象",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Object"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 47,
            "description": "LunarCalendar 的数据模型对象",
            "itemtype": "property",
            "name": "_model",
            "type": "UXC.LunarCalendar.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 54,
            "description": "LunarCalendar 的视图对像",
            "itemtype": "property",
            "name": "_view",
            "type": "UXC.LunarCalendar.View",
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 64,
            "description": "自定义日历组件模板\n<p>默认模板为UXC.LunarCalendar.Model#tpl</p>\n<p>如果用户显示定义UXC.LunarCalendar.tpl的话, 将采用用户的模板</p>",
            "itemtype": "property",
            "name": "tpl",
            "type": "{string}",
            "default": "empty",
            "static": 1,
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 74,
            "description": "设置是否在 dom 加载完毕后, 自动初始化所有日期控件",
            "itemtype": "property",
            "name": "autoinit",
            "default": "true",
            "type": "{bool}",
            "static": "<script>UXC.LunarCalendar.autoInit = true;</script>",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 83,
            "description": "设置默认显示的年份数, 该数为前后各多少年 默认为前后各10年",
            "itemtype": "property",
            "name": "defaultYearSpan",
            "type": "{int}",
            "default": "20",
            "static": "<script>UXC.LunarCalendar.defaultYearSpan = 20;</script>",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 92,
            "description": "从所有的LunarCalendar取得当前选中的日期\n<br /> 如果用户没有显式选中某个日期, 将尝试获取当前日期, 如果两者都没有返回undefined",
            "itemtype": "method",
            "name": "getSelectedItemGlobal",
            "static": 1,
            "return": {
                "description": "如果能获取到选中的日期将返回 { date: 当天日期, item: 选中的a, td: 选中的td }",
                "type": "Object|undefined"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 116,
            "description": "从所有的LunarCalendar取得当前选中日期的日期对象\n<br /> 如果用户没有显式选中某个日期, 将尝试获取当前日期, 如果两者都没有返回undefined",
            "itemtype": "method",
            "name": "getSelectedDateGlobal",
            "static": 1,
            "return": {
                "description": "",
                "type": "Date|undefined"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 129,
            "description": "从时间截获取选择器对象",
            "itemtype": "method",
            "name": "getItemByTimestamp",
            "static": 1,
            "params": [
                {
                    "name": "_tm",
                    "description": "时间截, 如果时间截少于13位, 将自动补0到13位, ps: php时间截为10位",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "td selector, 如果 td class unable 不可选, 将忽略",
                "type": "Selector|undefined"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 152,
            "description": "添加或者清除工作日样式",
            "itemtype": "method",
            "name": "workday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置为工作日状态的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将设为工作日. \n                                     如果 _customSet 非 undefined, 那么根据真假值判断清除工作日/添加工作日",
                    "type": "Any"
                }
            ],
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 168,
            "description": "判断 td 是否为工作日状态",
            "itemtype": "method",
            "name": "isWorkday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 180,
            "description": "添加或者清除假日样式",
            "itemtype": "method",
            "name": "holiday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置为假日状态的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将设为假日. \n                                     如果 _customSet 非 undefined, 那么根据真假值判断清除假日/添加假日",
                    "type": "Any"
                }
            ],
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 196,
            "description": "判断 td 是否为假日状态",
            "itemtype": "method",
            "name": "isHoliday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 208,
            "description": "添加或者清除注释",
            "itemtype": "method",
            "name": "comment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置注释的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将清除注释. \n                                     如果 _customSet 为 string, 将添加注释",
                    "type": "String|bool"
                }
            ],
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 235,
            "description": "判断 td 是否为注释状态",
            "itemtype": "method",
            "name": "isComment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 247,
            "description": "返回 td 的注释",
            "itemtype": "method",
            "name": "getComment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 262,
            "description": "用于分隔默认title和注释的分隔符",
            "itemtype": "property",
            "name": "commentSeparator",
            "type": "string",
            "default": "==========comment==========",
            "static": 1,
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 270,
            "description": "把注释添加到 a title 里",
            "itemtype": "method",
            "name": "commentTitle",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置注释的 a 父容器 td",
                    "type": "Selector"
                },
                {
                    "name": "_title",
                    "description": "如果 _title 为真, 将把注释添加到a title里. \n                                     如果 _title 为假, 将从 a title 里删除注释",
                    "type": "String|undefined"
                }
            ],
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 296,
            "description": "从JSON数据更新日历状态( 工作日, 休息日, 注释 )\n<br /> 注意, 该方法更新页面上所有的 LunarCalendar",
            "itemtype": "method",
            "name": "updateStatus",
            "static": 1,
            "params": [
                {
                    "name": "_data",
                    "description": "{ phpTimestamp:{ dayaction: 0|1|2, comment: string}, ... }\n<pre>      \n         dayaction: \n         0: delete workday/holiday\n         1: workday\n         2: holiday\n</pre>",
                    "type": "Object"
                }
            ],
            "example": [
                "\n     LunarCalendar.updateStatus(  {\n                                           \"1369843200\": {\n                                               \"dayaction\": 2,\n                                               \"comment\": \"dfdfgdsfgsdfgsdg<b></b>'\\\"'asdf\\\"\\\"'sdf\"\n                                           },\n                                           \"1370966400\": {\n                                               \"dayaction\": 0,\n                                               \"comment\": \"asdfasdfsa\"\n                                           },\n                                           \"1371139200\": {\n                                               \"dayaction\": 1\n                                           },\n                                           \"1371225600\": {\n                                               \"dayaction\": 0,\n                                               \"comment\": \"dddd\"\n                                           }\n                                       });"
            ],
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 383,
            "description": "LunarCalendar 内部初始化",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 394,
            "description": "更新日历视图为自定义的日期",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_date",
                    "description": "更新日历视图为 _date 所在日期的月份",
                    "type": "Date"
                }
            ],
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 404,
            "description": "显示下一个月的日期",
            "itemtype": "method",
            "name": "nextMonth",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 414,
            "description": "显示上一个月的日期",
            "itemtype": "method",
            "name": "preMonth",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 424,
            "description": "显示下一年的日期",
            "itemtype": "method",
            "name": "nextYear",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 434,
            "description": "显示上一年的日期",
            "itemtype": "method",
            "name": "preYear",
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 444,
            "description": "获取默认时间对象",
            "itemtype": "method",
            "name": "getDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 450,
            "description": "获取所有的默认时间对象",
            "itemtype": "method",
            "name": "getAllDate",
            "return": {
                "description": "{ date: 默认时间, minvalue: 有效最小时间\n                       , maxvalue: 有效最大时间, beginDate: 日历的起始时间, endDate: 日历的结束时间 }",
                "type": "Object"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 457,
            "description": "获取当前选中的日期, 如果用户没有显式选择, 将查找当前日期, 如果两者都没有的话返回undefined",
            "itemtype": "method",
            "name": "getSelectedDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 480,
            "description": "获取初始化日历的选择器对象",
            "itemtype": "method",
            "name": "getContainer",
            "return": {
                "description": "selector"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 486,
            "description": "获取日历的主选择器对象",
            "itemtype": "method",
            "name": "getLayout",
            "return": {
                "description": "selector"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 492,
            "description": "判断日历是否隐藏操作控件",
            "itemtype": "method",
            "name": "isHideControl",
            "return": {
                "description": "bool"
            },
            "class": "UXC.LunarCalendar",
            "namespace": "UXC"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 507,
            "description": "LunarCalendar model 对象",
            "itemtype": "property",
            "name": "_model",
            "type": "UXC.LunarCalendar.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 514,
            "description": "LunarCalendar 的主容器",
            "itemtype": "property",
            "name": "layout",
            "type": "selector",
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 525,
            "description": "初始化 View",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 537,
            "description": "初始化日历外观",
            "itemtype": "method",
            "name": "initLayout",
            "params": [
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 552,
            "description": "初始化年份",
            "itemtype": "method",
            "name": "initYear",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "",
                    "type": "DateObject"
                }
            ],
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 561,
            "description": "初始化月份",
            "itemtype": "method",
            "name": "initMonth",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "",
                    "type": "DateObject"
                }
            ],
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 570,
            "description": "初始化月份的所有日期",
            "itemtype": "method",
            "name": "_logic.initMonthDate",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "保存所有相关日期的对象",
                    "type": "DateObjects"
                }
            ],
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 671,
            "description": "把具体的公历和农历日期写进a标签的title里",
            "itemtype": "method",
            "name": "addTitle",
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 681,
            "description": "检查是否要隐藏操作控件",
            "itemtype": "method",
            "name": "hideControl",
            "class": "UXC.LunarCalendar.View",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 702,
            "description": "LunarCalendar 所要显示的selector",
            "itemtype": "property",
            "name": "container",
            "type": "selector",
            "default": "document.body",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 709,
            "description": "初始化时的时期",
            "itemtype": "property",
            "name": "date",
            "type": "date",
            "default": "new Date()",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 716,
            "description": "日历默认模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "UXC.LunarCalendar._deftpl",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 723,
            "description": "显示日历时所需要的所有日期对象",
            "itemtype": "property",
            "name": "dateObj",
            "type": "Object",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 729,
            "description": "a 标签 title 的临时存储对象",
            "itemtype": "property",
            "name": "_titleObj",
            "type": "Object",
            "default": "{}",
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 759,
            "description": "获取初始日期对象",
            "itemtype": "method",
            "name": "getDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "显示日历组件的input",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 780,
            "description": "把日期赋值给文本框",
            "itemtype": "method",
            "name": "setDate",
            "params": [
                {
                    "name": "_timestamp",
                    "description": "日期对象的时间戳",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 790,
            "description": "给文本框赋值, 日期为控件的当前日期",
            "itemtype": "method",
            "name": "setSelectedDate",
            "return": {
                "description": "0/1",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 806,
            "description": "监听上一年按钮",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 815,
            "description": "监听上一月按钮",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 824,
            "description": "监听下一月按钮",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 833,
            "description": "监听下一年按钮",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 842,
            "description": "监听年份按钮, 是否要显示年份列表",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 864,
            "description": "监听月份按钮, 是否要显示月份列表",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 878,
            "description": "监听年份列表选择状态",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 888,
            "description": "监听月份列表选择状态",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 898,
            "description": "监听日期单元格点击事件",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 920,
            "description": "监听body点击事件, 点击时隐藏日历控件的年份和月份列表",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 926,
            "description": "DOM 加载完毕后, 初始化日历组件",
            "itemtype": "event",
            "name": "dom ready",
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/UXC.LunarCalendar.js",
            "line": 940,
            "description": "LunarCalendar 日历默认模板",
            "itemtype": "property",
            "name": "_deftpl",
            "type": "string",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "UXC.LunarCalendar.Model",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2,
            "description": "取当前脚本标签的 src路径",
            "author": "scuehs@btbtd.org 2013-05-23",
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": "UXC.Dialog",
            "namespace": "UXC.LunarCalendar"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 129,
            "description": "从 HTML 属性 自动执行 UXC.Dialog.alert / UXC.Dialog.confirm",
            "attr": "{function}  panelcancelcallback cancel  回调",
            "class": "UXC.Dialog.mask",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 161,
            "description": "响应窗口改变大小和滚动",
            "class": "UXC.Dialog.mask",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 174,
            "description": "会话弹框逻辑处理方法集",
            "itemtype": "property",
            "name": "_logic",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 181,
            "description": "延时处理的指针属性",
            "itemtype": "property",
            "name": "_logic.timeout",
            "type": "setTimeout",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 189,
            "description": "延时显示弹框\n<br />延时是为了使用户绑定的 show 事件能够被执行",
            "itemtype": "property",
            "name": "_logic.showMs",
            "type": "int     millisecond",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 198,
            "description": "弹框最小宽度",
            "itemtype": "property",
            "name": "_logic.minWidth",
            "type": "int",
            "default": "180",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 207,
            "description": "弹框最大宽度",
            "itemtype": "property",
            "name": "_logic.maxWidth",
            "type": "int",
            "default": "500",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 216,
            "description": "设置会话弹框的唯一性",
            "itemtype": "method",
            "name": "_logic.dialogIdentifier",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "UXC.Panel"
                }
            ],
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 234,
            "description": "显示蒙板",
            "itemtype": "method",
            "name": "_logic.showMask",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 254,
            "description": "隐藏蒙板",
            "itemtype": "method",
            "name": "_logic.hideMask",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 266,
            "description": "窗口改变大小时, 改变蒙板的大小,\n<br />这个方法主要为了兼容 IE6",
            "itemtype": "method",
            "name": "_logic.setMaskSizeForIe6",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 289,
            "description": "获取弹框的显示状态, 默认为0(成功)",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_status",
                    "description": "弹框状态: 0:成功, 1:失败, 2:警告",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 307,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "UXC.Panel"
                }
            ],
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 323,
            "description": "保存会话弹框的所有默认模板",
            "itemtype": "property",
            "name": "_logic.tpls",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 331,
            "description": "alert 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.alert",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 354,
            "description": "confirm 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.confirm",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Dialog.js",
            "line": 378,
            "description": "会话弹框的蒙板模板",
            "itemtype": "property",
            "name": "_logic.tpls.mask",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Dialog",
            "namespace": "UXC.Dialog"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 46,
            "description": "存放数据的model层, see <a href='UXC.Panel.Model.html'>Panel.Model</a>",
            "itemtype": "property",
            "name": "_model",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 52,
            "description": "控制视图的view层, see <a href='UXC.Panel.View.html'>Panel.View</a>",
            "itemtype": "property",
            "name": "_view",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 61,
            "description": "从 selector 获取 Panel 的实例\n<br /><b>如果从DOM初始化, 不进行判断的话, 会重复初始化多次</b>",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Panel instance"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 76,
            "description": "监听Panel的所有点击事件\n<br />如果事件源有 eventtype 属性, 则会触发eventtype的事件类型",
            "itemtype": "event",
            "name": "Panel click",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 92,
            "description": "初始化Panel",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 102,
            "description": "初始化Panel 默认事件",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 123,
            "description": "为Panel绑定事件\n<br /> 内置事件类型有 show, hide, close, center, confirm, cancel\n, beforeshow, beforehide, beforeclose, beforecenter\n<br /> 用户可通过 HTML eventtype 属性自定义事件类型",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "要绑定的事件名",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "要绑定的事件回调函数",
                    "type": "Function"
                }
            ],
            "example": [
                "\n               //绑定内置事件\n               <button type=\"button\" eventtype=\"close\">text</button>\n               <script>\n               panelInstace.on( 'close', function( _evt, _panel ){ do something } );\n               </script>\n\n               //绑定自定义事件\n               <button type=\"button\" eventtype=\"userevent\">text</button>\n               <script>\n               panelInstace.on( 'userevent', function( _evt, _pan:el ){ do something } );\n               </script>"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 149,
            "description": "显示 Panel\n<br /> Panel初始后, 默认是隐藏状态, 显示 Panel 需要显式调用 show 方法",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_position",
                    "description": "指定 panel 要显示的位置, \n <br />如果 _position 为 int:  0, 表示屏幕居中显示\n <br />如果 _position 为 selector:  Paenl 的显示位置将基于 _position 的上下左右",
                    "type": "Int|selector"
                }
            ],
            "example": [
                "\n     panelInstace.show();            //默认显示\n     panelInstace.show( 0 );         //居中显示\n     panelInstace.show( _selector ); //位于 _selector 的上下左右"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 202,
            "description": "设置Panel的显示位置基于 _src 的左右上下",
            "itemtype": "method",
            "name": "positionWith",
            "params": [
                {
                    "name": "_src",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 213,
            "description": "隐藏 Panel\n<br /> 隐藏 Panel 设置 css display:none, 不会从DOM 删除 Panel",
            "itemtype": "method",
            "name": "hide",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 224,
            "description": "关闭 Panel\n<br /> <b>关闭 Panel 是直接从 DOM 中删除 Panel</b>",
            "itemtype": "method",
            "name": "close",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 236,
            "description": "从DOM清除Panel\n<br /> <b>close 方法清除 Panel可以被用户阻止, 该方法不会被用户阻止</b>",
            "itemtype": "method",
            "name": "dispose",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 247,
            "description": "把 Panel 位置设为屏幕居中",
            "itemtype": "method",
            "name": "center",
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 258,
            "description": "返回 Panel 的 jquery dom选择器对象\n<br />这个方法以后将会清除, 请使用 layout 方法",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 265,
            "description": "返回 Panel 的 jquery dom选择器对象",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 271,
            "description": "从 Panel 选择器中查找内容\n<br />添加这个方法是为了方便jquery 使用者的习惯",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 279,
            "description": "触发 Panel 已绑定的事件\n<br />用户可以使用该方法主动触发绑定的事件",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "_evtName",
                    "description": "要触发的事件名, 必填参数",
                    "type": "String"
                },
                {
                    "name": "_srcElement",
                    "description": "触发事件的源对象, 可选参数",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n     panelInstace.trigger('close');\n     panelInstace.trigger('userevent', sourceElement);"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 315,
            "description": "获取或者设置 Panel Header 的HTML内容\n<br />如果 Panel默认没有 Header的话, 使用该方法 _html 非空可动态创建一个Header",
            "itemtype": "method",
            "name": "header",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "header 的HTML内容",
                "type": "String"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 329,
            "description": "获取或者设置 Panel body 的HTML内容",
            "itemtype": "method",
            "name": "body",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "body 的HTML内容",
                "type": "String"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 342,
            "description": "获取或者设置 Panel footer 的HTML内容\n<br />如果 Panel默认没有 footer的话, 使用该方法 _html 非空可动态创建一个footer",
            "itemtype": "method",
            "name": "footer",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "footer 的HTML内容",
                "type": "String"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 356,
            "description": "获取或者设置 Panel 的HTML内容",
            "itemtype": "method",
            "name": "panel",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "panel 的HTML内容",
                "type": "String"
            },
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 370,
            "description": "Panel 显示前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.show() 时触发",
            "itemtype": "event",
            "name": "beforeshow",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforeshow', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 378,
            "description": "显示Panel时会触发的事件",
            "itemtype": "event",
            "name": "show",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'show', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 385,
            "description": "Panel 隐藏前会触发的事件<br/>\n<br />这个事件在用户调用 _panelInstance.hide() 时触发",
            "itemtype": "event",
            "name": "beforehide",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforehide', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 393,
            "description": "Panel 隐藏时会触发的事件<br/>\n<br />这个事件在用户调用 _panelInstance.hide() 时触发",
            "itemtype": "event",
            "name": "hide",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'hide', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 401,
            "description": "Panel 关闭前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.close() 时触发",
            "itemtype": "event",
            "name": "beforeclose",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"close\">text</button>\n     <script>\n     panelInstace.on( 'beforeclose', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 412,
            "description": "关闭事件",
            "itemtype": "event",
            "name": "close",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"close\">text</button>\n     <script>\n     panelInstace.on( 'close', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 422,
            "description": "Panel 居中显示前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.center() 时触发",
            "itemtype": "event",
            "name": "beforecenter",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforecenter', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 430,
            "description": "Panel 居中后会触发的事件",
            "itemtype": "event",
            "name": "center",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'center', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 437,
            "description": "Panel 点击确认按钮触发的事件",
            "itemtype": "event",
            "name": "confirm",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"confirm\">text</button>\n     <script>\n     panelInstace.on( 'confirm', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 447,
            "description": "Panel 点击确取消按钮触发的事件",
            "itemtype": "event",
            "name": "cancel",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"cancel\">text</button>\n     <script>\n     panelInstace.on( 'cancel', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "UXC.Panel",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 470,
            "description": "panel 的 HTML 对象或者字符串\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "selector",
            "type": "selector|string",
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 477,
            "description": "header 内容 \n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "headers",
            "type": "string",
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 484,
            "description": "body 内容\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "bodys",
            "type": "string",
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 491,
            "description": "footers 内容\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "footers",
            "type": "string",
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 498,
            "description": "panel 初始化后的 selector 对象",
            "itemtype": "property",
            "name": "panel",
            "type": "selector",
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 504,
            "description": "存储用户事件和默认事件的对象",
            "itemtype": "property",
            "name": "_events",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 515,
            "description": "Model 初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Model instance"
            },
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 538,
            "description": "添加事件方法",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "事件名",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "事件的回调函数",
                    "type": "Function"
                }
            ],
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 554,
            "description": "获取事件方法",
            "itemtype": "method",
            "name": "getEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "事件名",
                    "type": "String"
                }
            ],
            "return": {
                "description": "某类事件类型的所有回调",
                "type": "Array"
            },
            "class": "UXC.Panel.Model",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 575,
            "description": "Panel的基础数据类, see <a href='UXC.Panel.Model.html'>Panel.Model</a>",
            "itemtype": "property",
            "name": "_model",
            "type": "Panel.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel.View",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 582,
            "description": "默认模板",
            "prototype": "_tpl",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel.View",
            "namespace": "UXC.Panel"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 594,
            "description": "View 的初始方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 617,
            "description": "设置Panel的显示位置基于 _src 的左右上下",
            "itemtype": "method",
            "name": "positionWith",
            "params": [
                {
                    "name": "_src",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 643,
            "description": "显示 Panel",
            "itemtype": "method",
            "name": "show",
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 651,
            "description": "隐藏 Panel",
            "itemtype": "method",
            "name": "hide",
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 659,
            "description": "关闭 Panel",
            "itemtype": "method",
            "name": "close",
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 668,
            "description": "获取 Panel 的 selector 对象",
            "itemtype": "method",
            "name": "getPanel",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 680,
            "description": "获取或设置Panel的 header 内容, see <a href='UXC.Panel.html#method_header'>Panel.header</a>",
            "itemtype": "method",
            "name": "getHeader",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 700,
            "description": "获取或设置Panel的 body 内容, see <a href='UXC.Panel.html#method_body'>Panel.body</a>",
            "itemtype": "method",
            "name": "getBody",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 716,
            "description": "获取或设置Panel的 footer 内容, see <a href='UXC.Panel.html#method_footer'>Panel.footer</a>",
            "itemtype": "method",
            "name": "getFooter",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 736,
            "description": "居中显示 Panel",
            "itemtype": "method",
            "name": "center",
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Panel.js",
            "line": 768,
            "description": "Panel 的默认模板",
            "access": "private",
            "tagname": "",
            "class": "UXC.Panel.View"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 67,
            "description": "从 HTML 属性 自动执行 UXC.alert / UXC.confirm",
            "attr": "{function}  panelcancelcallback cancel  回调",
            "class": "UXC.hideAllPopup",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 96,
            "description": "响应窗口改变大小",
            "class": "UXC.hideAllPopup",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 105,
            "description": "弹框逻辑处理方法集",
            "itemtype": "property",
            "name": "_logic",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 112,
            "description": "弹框最小宽度",
            "itemtype": "property",
            "name": "_logic.minWidth",
            "type": "int",
            "default": "180",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 121,
            "description": "弹框最大宽度",
            "itemtype": "property",
            "name": "_logic.maxWidth",
            "type": "int",
            "default": "500",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 130,
            "description": "显示时 X轴的偏移值",
            "itemtype": "property",
            "name": "_logic.xoffset",
            "type": "number",
            "default": "9",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 139,
            "description": "显示时 Y轴的偏移值",
            "itemtype": "property",
            "name": "_logic.yoffset",
            "type": "number",
            "default": "3",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 148,
            "description": "设置弹框的唯一性",
            "itemtype": "method",
            "name": "_logic.popupIdentifier",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "UXC.Panel"
                }
            ],
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 165,
            "description": "弹框通用处理方法",
            "itemtype": "method",
            "name": "_logic.popup",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_tpl",
                    "description": "弹框模板",
                    "type": "String"
                },
                {
                    "name": "_msg",
                    "description": "弹框提示",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "弹框事件源对象",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "弹框状态",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "confirm 回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "UXC.Panel"
            },
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 232,
            "description": "隐藏弹框缓动效果",
            "itemtype": "method",
            "name": "_logic.hideEffect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "UXC.Panel"
                },
                {
                    "name": "_popupSrc",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_doneCb",
                    "description": "缓动完成后的回调",
                    "type": "Function"
                }
            ],
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 275,
            "description": "隐藏弹框缓动效果",
            "itemtype": "method",
            "name": "_logic.showEffect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "UXC.Panel"
                },
                {
                    "name": "_popupSrc",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 327,
            "description": "设置 Panel 的默认X,Y轴",
            "itemtype": "method",
            "name": "_logic.onresize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 363,
            "description": "取得弹框最要显示的 y 轴",
            "itemtype": "method",
            "name": "_logic.getTop",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_scrTop",
                    "description": "滚动条Y位置",
                    "type": "Number"
                },
                {
                    "name": "_srcHeight",
                    "description": "事件源 高度",
                    "type": "Number"
                },
                {
                    "name": "_targetHeight",
                    "description": "弹框高度",
                    "type": "Number"
                },
                {
                    "name": "_offset",
                    "description": "Y轴偏移值",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 384,
            "description": "取得弹框最要显示的 x 轴",
            "itemtype": "method",
            "name": "_logic.getLeft",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_scrTop",
                    "description": "滚动条Y位置",
                    "type": "Number"
                },
                {
                    "name": "_srcHeight",
                    "description": "事件源 高度",
                    "type": "Number"
                },
                {
                    "name": "_targetHeight",
                    "description": "弹框高度",
                    "type": "Number"
                },
                {
                    "name": "_offset",
                    "description": "Y轴偏移值",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 407,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "UXC.Panel"
                }
            ],
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 424,
            "description": "获取弹框的显示状态, 默认为0(成功)",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_status",
                    "description": "弹框状态: 0:成功, 1:失败, 2:警告",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 442,
            "description": "保存弹框的所有默认模板",
            "itemtype": "property",
            "name": "_logic.tpls",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 450,
            "description": "alert 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.alert",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Panel/UXC.Popup.js",
            "line": 473,
            "description": "confirm 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.confirm",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.alert",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 109,
            "description": "初始化数据模型",
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 113,
            "description": "初始化视图模型( 根据不同的滚动方向, 初始化不同的视图类 )",
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 125,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "bool"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 153,
            "description": "自定义事件绑定函数\n<br />使用 jquery on 方法绑定 为 Slider 实例绑定事件",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 166,
            "description": "自定义事件触发函数\n<br />使用 jquery trigger 方法绑定 为 Slider 实例函数自定义事件",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 178,
            "description": "控制 Slider 向左或向右划动",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "_backwrad",
                    "description": "_backwrad = ture(向左), false(向右), 默认false",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 185,
            "description": "控制 Slider 划动到指定索引",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "_newpointer",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 192,
            "description": "获取 Slider 的总索引数",
            "itemtype": "method",
            "name": "totalpage",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 198,
            "description": "获取 Slider 的当前索引数",
            "itemtype": "method",
            "name": "pointer",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 204,
            "description": "获取指定索引页的 selector 对象",
            "itemtype": "method",
            "name": "page",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 211,
            "description": "获取 Slider 的主外观容器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 217,
            "description": "查找 layout 的内容",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 258,
            "description": "初始化自动滚动\n<br />如果 layout 的 html属性 sliderautomove=ture, 则会执行本函数",
            "itemtype": "method",
            "name": "_initAutoMove",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "SliderInstance"
            },
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 319,
            "itemtype": "event",
            "name": "inited",
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 322,
            "itemtype": "event",
            "name": "beforemove",
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 325,
            "itemtype": "event",
            "name": "movedone",
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 328,
            "itemtype": "event",
            "name": "outmin",
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 331,
            "itemtype": "event",
            "name": "outmax",
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 334,
            "description": "页面加载完毕后, 是否自动初始化 带有 class=js_autoSlider 的应用",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 342,
            "description": "批量初始化 Slider",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "array"
            },
            "static": 1,
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 375,
            "description": "从 selector 获得 或 设置 Slider 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "SliderInstance"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "static": 1,
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 388,
            "description": "判断 selector 是否具备 实例化 Slider 的条件",
            "itemtype": "method",
            "name": "isSlider",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "UXC.Slider",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 409,
            "description": "保存 layout 的引用",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 416,
            "description": "自动移动的方向\n<br /> true = 向右|向下, false = 向左|向上",
            "itemtype": "property",
            "name": "_moveDirection",
            "type": "bool",
            "default": "true",
            "access": "private",
            "tagname": "",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 425,
            "description": "滚动时的 interval 引用",
            "itemtype": "property",
            "name": "_interval",
            "type": "interval",
            "access": "private",
            "tagname": "",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 432,
            "description": "自动滚动时的 timeout 引用",
            "itemtype": "property",
            "name": "_timeout",
            "type": "timeout",
            "access": "private",
            "tagname": "",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 444,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Slider.Model"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 465,
            "description": "获取 slider 外观的 selector",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 471,
            "description": "获取 左移的 selector",
            "itemtype": "method",
            "name": "leftbutton",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 477,
            "description": "获取 右移的 selector",
            "itemtype": "method",
            "name": "rightbutton",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 483,
            "description": "获取移动方向\n<br />horizontal, vertical",
            "itemtype": "method",
            "name": "direction",
            "default": "horizontal",
            "return": {
                "description": "string"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 491,
            "description": "获取/设置自动移动的方向\n<br /> true = 向右|向下, false = 向左|向上",
            "itemtype": "method",
            "name": "moveDirection",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 504,
            "description": "获取每次移动多少项",
            "itemtype": "method",
            "name": "howmanyitem",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 510,
            "description": "获取宽度",
            "itemtype": "method",
            "name": "width",
            "default": "800",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 517,
            "description": "获取高度",
            "itemtype": "method",
            "name": "height",
            "default": "230",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 524,
            "description": "获取项宽度",
            "itemtype": "method",
            "name": "itemwidth",
            "default": "160",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 531,
            "description": "获取项高度",
            "itemtype": "method",
            "name": "itemheight",
            "default": "230",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 538,
            "description": "每次移动的总时间, 单位毫秒",
            "itemtype": "method",
            "name": "loop",
            "default": "false",
            "return": {
                "description": "bool"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 545,
            "description": "获取每次移动间隔的毫秒数",
            "itemtype": "method",
            "name": "stepms",
            "default": "10",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 552,
            "description": "获取每次移动持续的毫秒数",
            "itemtype": "method",
            "name": "durationms",
            "default": "300",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 559,
            "description": "获取自动滚动的间隔",
            "itemtype": "method",
            "name": "automovems",
            "default": "2000",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 566,
            "description": "获取是否自动滚动",
            "itemtype": "method",
            "name": "automove",
            "default": "false",
            "return": {
                "description": "bool"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 573,
            "description": "获取默认显示的索引",
            "itemtype": "method",
            "name": "defaultpage",
            "return": {
                "description": "int"
            },
            "default": "0",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 580,
            "description": "获取划动的所有项",
            "itemtype": "method",
            "name": "subitems",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 594,
            "description": "获取分页总数\n<br /> Math.ceil( subitems / howmanyitem )",
            "itemtype": "method",
            "name": "totalpage",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 610,
            "description": "获取指定页的所有划动项",
            "itemtype": "method",
            "name": "page",
            "params": [
                {
                    "name": "_index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 629,
            "description": "获取/设置当前索引位置",
            "itemtype": "method",
            "name": "pointer",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 641,
            "description": "获取新的划动位置\n<br />根据划向的方向 和 是否循环",
            "itemtype": "method",
            "name": "newpointer",
            "params": [
                {
                    "name": "_isbackward",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 657,
            "description": "修正指针的索引位置, 防止范围溢出",
            "itemtype": "method",
            "name": "fixpointer",
            "params": [
                {
                    "name": "_pointer",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 675,
            "description": "获取自动萌动的新索引",
            "itemtype": "method",
            "name": "automoveNewPointer",
            "return": {
                "description": "int"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 706,
            "description": "获取/设置 划动的 interval 对象",
            "itemtype": "method",
            "name": "interval",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Interval"
                }
            ],
            "return": {
                "description": "interval"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 717,
            "description": "清除划动的 interval",
            "itemtype": "method",
            "name": "clearInterval",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 725,
            "description": "获取/设置 自动划动的 timeout",
            "itemtype": "method",
            "name": "timeout",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Timeout"
                }
            ],
            "return": {
                "description": "timeout"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 736,
            "description": "清除自动划动的 timeout",
            "itemtype": "method",
            "name": "clearTimeout",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 744,
            "description": "获取/设置当前鼠标是否位于 slider 及其控件上面",
            "itemtype": "method",
            "name": "controlover",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 755,
            "description": "获取初始化后的回调函数",
            "itemtype": "method",
            "name": "initedcb",
            "return": {
                "description": "function|undefined"
            },
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 942,
            "description": "页面加载后, 自动初始化符合 Slider 规则的 Slider",
            "class": "UXC.Slider.Model",
            "namespace": "UXC.Slider"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 135,
            "description": "Tab 模型类的实例",
            "itemtype": "property",
            "name": "_model",
            "type": "UXC.Tab.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 142,
            "description": "Tab 视图类的实例",
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 150,
            "description": "页面加载完毕后, 是否要添加自动初始化事件\n<br /> 自动初始化是 鼠标移动到 Tab 容器时去执行的, 不是页面加载完毕后就开始自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 159,
            "description": "label 当前状态的样式",
            "itemtype": "property",
            "name": "activeClass",
            "type": "string",
            "default": "cur",
            "static": 1,
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 167,
            "description": "label 的触发事件",
            "itemtype": "property",
            "name": "activeEvent",
            "type": "string",
            "default": "click",
            "static": 1,
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 175,
            "description": "获取或设置 Tab 容器的 Tab 实例属性",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "_setter 不为空是设置",
                    "type": "UXC.Tab"
                }
            ],
            "static": 1,
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 191,
            "description": "全局的 ajax 处理回调",
            "itemtype": "property",
            "name": "ajaxCallback",
            "type": "function",
            "default": "null",
            "static": 1,
            "example": [
                "\n           $(document).ready( function(){\n               UXC.Tab.ajaxCallback =\n                   function( _data, _label, _container, _textStatus, _jqXHR ){\n                       _data && ( _data = $.parseJSON( _data ) );\n                       if( _data && _data.errorno === 0 ){\n                           _container.html( printf( '<h2>UXC.Tab.ajaxCallback</h2>{0}', _data.data ) );\n                       }else{\n                           Tab.isAjaxInited( _label, 0 );\n                           _container.html( '<h2>内容加载失败!</h2>' );\n                       }\n                   };\n           });"
            ],
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 212,
            "description": "ajax 请求是否添加随机参数 rnd, 以防止页面缓存的结果差异",
            "itemtype": "property",
            "name": "ajaxRandom",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 220,
            "description": "判断一个 label 是否为 ajax",
            "itemtype": "method",
            "name": "isAjax",
            "static": 1,
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "String|undefined"
            },
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 231,
            "description": "判断一个 ajax label 是否已经初始化过\n<br /> 这个方法需要跟 Tab.isAjax 结合判断才更为准确",
            "itemtype": "method",
            "name": "isAjaxInited",
            "static": 1,
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "如果 _setter 不为空, 则进行赋值",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n       function tabactive( _evt, _container, _tabIns ){\n           var _label = $(this);\n           UXC.log( 'tab ', _evt.type, _label.html(), new Date().getTime() );\n           if( UXC.Tab.isAjax( _label ) && ! UXC.Tab.isAjaxInited( _label ) ){\n               _container.html( '<h2>内容加载中...</h2>' );\n           }\n       }"
            ],
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 254,
            "description": "Tab 内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 271,
            "description": "把 _label 设置为活动状态",
            "itemtype": "method",
            "name": "active",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Tab",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 297,
            "description": "Tab 的主容器",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 304,
            "description": "Tab 初始完毕后要触发的label, 可选",
            "itemtype": "property",
            "name": "_triggerTarget",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 311,
            "description": "Tab 的标签列表选择器",
            "itemtype": "property",
            "name": "_tablabels",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 318,
            "description": "Tab 的内容列表选择器",
            "itemtype": "property",
            "name": "_tabcontainers",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 325,
            "description": "当前标签的所在索引位置",
            "itemtype": "property",
            "name": "currentIndex",
            "type": "int",
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 336,
            "description": "Tab Model 内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 364,
            "description": "判断是否从 layout 下查找内容",
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 371,
            "description": "获取 Tab 的主容器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 377,
            "description": "获取 Tab 所有 label 或 特定索引的 label",
            "itemtype": "method",
            "name": "tablabels",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 387,
            "description": "获取 Tab 所有内容container 或 特定索引的 container",
            "itemtype": "method",
            "name": "tabcontainers",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 397,
            "description": "获取初始化要触发的 label",
            "itemtype": "method",
            "name": "triggerTarget",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 403,
            "description": "判断一个容器是否 符合 Tab 数据要求",
            "itemtype": "method",
            "name": "layoutIsTab",
            "return": {
                "description": "bool"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 409,
            "description": "获取 Tab 活动状态的 class",
            "itemtype": "method",
            "name": "activeClass",
            "return": {
                "description": "string"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 415,
            "description": "获取 Tab label 的触发事件名称",
            "itemtype": "method",
            "name": "activeEvent",
            "return": {
                "description": "string"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 421,
            "description": "判断 label 是否符合要求, 或者设置一个 label为符合要求",
            "itemtype": "method",
            "name": "tablabel",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 434,
            "description": "判断 container 是否符合要求, 或者设置一个 container为符合要求",
            "itemtype": "method",
            "name": "tabcontent",
            "params": [
                {
                    "name": "_content",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 448,
            "description": "获取或设置 label 的索引位置",
            "itemtype": "method",
            "name": "tabindex",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 462,
            "description": "获取Tab label 触发事件后的回调",
            "itemtype": "method",
            "name": "tabactivecallback",
            "return": {
                "description": "function"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 473,
            "description": "获取 Tab label 变更后的回调",
            "itemtype": "method",
            "name": "tabchangecallback",
            "return": {
                "description": "function"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 484,
            "description": "获取 Tab label 活动状态显示样式的标签",
            "itemtype": "method",
            "name": "tablabelparent",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 498,
            "description": "获取 ajax label 的 URL",
            "itemtype": "method",
            "name": "tabajaxurl",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 505,
            "description": "获取 ajax label 的请求方法 get/post",
            "itemtype": "method",
            "name": "tabajaxmethod",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 512,
            "description": "获取 ajax label 的请求数据",
            "itemtype": "method",
            "name": "tabajaxdata",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 526,
            "description": "获取 ajax label 请求URL后的回调",
            "itemtype": "method",
            "name": "tabajaxcallback",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "function"
            },
            "class": "UXC.Tab.Model",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 547,
            "description": "Tab 数据模型类实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "{UXC.Tab.Model}",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tab.View",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 557,
            "description": "Tab 视图类初始化方法",
            "itemtype": "method",
            "name": "init",
            "class": "UXC.Tab.View",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 579,
            "description": "设置特定索引位置的 label 为活动状态",
            "itemtype": "method",
            "name": "active",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "UXC.Tab.View",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 603,
            "description": "请求特定索引位置的 ajax tab 数据",
            "itemtype": "method",
            "name": "activeAjax",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "UXC.Tab.View",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 631,
            "description": "自动化初始 Tab 实例\n如果 Tab.autoInit = true, 鼠标移至 Tab 后会自动初始化 Tab",
            "class": "UXC.Tab.View",
            "namespace": "UXC.Tab"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 44,
            "description": "数据模型类实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "UXC.Tips.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 51,
            "description": "视图类实例引用",
            "itemtype": "property",
            "name": "_view",
            "type": "UXC.Tips.View",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 63,
            "description": "初始化 Tips 内部属性",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 85,
            "description": "显示 Tips",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_evt",
                    "description": "_evt 可以是事件/或者带 pageX && pageY 属性的 Object\n                                 <br />pageX 和 pageY 是显示位于整个文档的绝对 x/y 轴位置",
                    "type": "Event|object"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 97,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "TipsInstance"
            },
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 103,
            "description": "获取 显示 tips 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 109,
            "description": "获取 tips 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 Tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 116,
            "description": "获取 tips 显示的内容",
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "string"
            },
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 122,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 130,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 138,
            "description": "tips 初始化实例后的触发的事件\n<br />在HTML属性定义回调 tipsinitedcallback =\"function name\"",
            "itemtype": "event",
            "name": "TipsInited",
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 143,
            "description": "tips 显示后的回调\n<br />在HTML属性定义回调 tipsshowcallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsShow",
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 148,
            "description": "tips 隐藏后的回调\n<br />在HTML属性定义回调 tipshidecallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsHide",
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 153,
            "description": "批量初始化 Tips 效果",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "选择器列表对象, 如果带 title/tipsData 属性则会初始化 Tips 效果",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               UXC.use( 'Tips' );\n               $(document).ready( function(_evt){\n                   UXC.Tips.autoInit = false;\n                   UXC.Tips.init( $( 'a' ) ); \n               });\n           </script>"
            ],
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 181,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "static": 1,
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 190,
            "description": "页面加载完毕后, 是否自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 198,
            "description": "用户自定义模板\n<br /> 如果用户显式覆盖此属性, Tips 会使用用户定义的模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "null",
            "static": 1,
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 207,
            "description": "设置 Tips 超过边界的默认偏移像素\n<p>\nbottom: 边界超过屏幕底部的偏移\n<br />left: 边界低于屏幕左侧的偏移\n<br />top: 边界低于屏幕顶部的偏移\n</p>",
            "itemtype": "property",
            "name": "offset",
            "type": "{point object}",
            "default": "{ 'bottom': { 'x': 15, 'y': 15 }, 'left': { 'x': -28, 'y': 5 }, 'top': { 'x': -2, 'y': -22 } };",
            "static": 1,
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 224,
            "description": "Tips 的最小宽度",
            "itemtype": "property",
            "name": "minWidth",
            "type": "int",
            "default": "200",
            "static": 1,
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 232,
            "description": "Tips 的最大宽度",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "int",
            "default": "400",
            "static": 1,
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 240,
            "description": "把 tag 的 title 属性 转为 tipsData \n<p><b>注意:</b> 这个方法只有当 Tips.autoInit 为假时, 或者浏览器会 IE时才会生效\n<br />Tips.autoInit 为真时, 非IE浏览器无需转换\n<br />如果为IE浏览器, 无论 Tips.autoInit 为真假, 都会进行转换\n<br />方法内部已经做了判断, 可以直接调用, 对IE会生效\n, 这个方法的存在是因为 IE 的 title为延时显示, 所以tips显示后, 默认title会盖在tips上面\n</p>",
            "itemtype": "method",
            "name": "titleToTipsdata",
            "params": [
                {
                    "name": "_selector",
                    "description": "要转title 为 tipsData的选择器列表",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 260,
            "description": "从 selector 获得 或 设置 Tips 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "TipsInstance"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "static": 1,
            "class": "UXC.Tips",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 282,
            "description": "tips 默认模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "<div class=\"UTips\"></div>",
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 289,
            "description": "保存 tips 的触发源选择器",
            "itemtype": "property",
            "name": "_selector",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 296,
            "description": "tips 的显示内容\n<br />标签的 title/tipsData 会保存在这个属性, 然后 title/tipsData 会被清除掉",
            "itemtype": "property",
            "name": "_data",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 308,
            "description": "初始化 tips 模型类",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 320,
            "description": "获取/更新 tips 显示内容",
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 331,
            "description": "更新 tips 数据",
            "itemtype": "method",
            "name": "update",
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 344,
            "description": "判断 selector 是否初始化过 Tips 功能",
            "itemtype": "method",
            "name": "isInited",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 355,
            "description": "获取 tips 触发源选择器",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tips.Model",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 415,
            "description": "保存 Tips 数据模型类的实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "UXC.Tips.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 422,
            "description": "保存 Tips 的显示外观选择器",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 432,
            "description": "初始化 Tips 视图类",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 444,
            "description": "显示 Tips",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_evt",
                    "description": "_evt 可以是事件/或者带 pageX && pageY 属性的 Object\n                                 <br />pageX 和 pageY 是显示位于整个文档的绝对 x/y 轴位置",
                    "type": "Event|object"
                }
            ],
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 481,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 489,
            "description": "获取 Tips 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 Tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 512,
            "description": "鼠标移动到 Tips 触发源的触发事件",
            "itemtype": "method",
            "name": "tipMouseenter",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 544,
            "description": "Tips 的默认模板",
            "itemtype": "property",
            "name": "_defTpl",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 552,
            "description": "页面加载完毕后, 是否自动初始化 Tips",
            "class": "UXC.Tips.View",
            "namespace": "UXC.Tips"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 51,
            "description": "树的数据模型引用",
            "itemtype": "property",
            "name": "_model",
            "type": "UXC.Tree.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 58,
            "description": "树的视图模型引用",
            "itemtype": "property",
            "name": "_view",
            "type": "UXC.Tree.View",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 66,
            "description": "从选择器获取 树的 实例, 如果实例有限, 加以判断可避免重复初始化",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "UXC.Tree Instance|undefined"
            },
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 78,
            "description": "树的数据过滤函数\n<br /> 如果树的初始数据格式不符合要求, 可通过该属性定义函数进行数据修正",
            "itemtype": "property",
            "name": "dataFilter",
            "type": "function",
            "default": "undefined",
            "static": 1,
            "example": [
                "\n           UXC.Tree.dataFilter =\n           function( _data ){\n               var _r = {};\n\n               if( _data ){\n                   if( _data.root.length > 2 ){\n                       _data.root.shift();\n                       _r.root = _data.root;\n                    }\n                   _r.data = {};\n                   for( var k in _data.data ){\n                       _r.data[ k ] = [];\n                       for( var i = 0, j = _data.data[k].length; i < j; i++ ){\n                           if( _data.data[k][i].length < 3 ) continue;\n                           _data.data[k][i].shift();\n                           _r.data[k].push( _data.data[k][i] );\n                       }\n                   }\n               }\n               return _r;\n           };"
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 111,
            "description": "初始化树\n<br /> 实例化树后, 需要显式调用该方法初始化树的可视状态",
            "itemtype": "method",
            "name": "init",
            "example": [
                "\n               var _tree = new UXC.Tree( $('#tree_box'), treeData );\n               _tree.init();"
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 125,
            "description": "展开树到某个具体节点, 或者展开树的所有节点",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "如果_nodeId='undefined', 将会展开树的所有节点\n                                     <br />_nodeId 不为空, 将展开树到 _nodeId 所在的节点",
                    "type": "String|int"
                }
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 140,
            "description": "关闭某个节点, 或者关闭整个树",
            "itemtype": "method",
            "name": "close",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "如果_nodeId='undefined', 将会关闭树的所有节点\n                                     <br />_nodeId 不为空, 将关闭树 _nodeId 所在的节点",
                    "type": "String|int"
                }
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 155,
            "description": "获取树的 ID 前缀\n<br />每个树都会有自己的随机ID前缀",
            "itemtype": "method",
            "name": "idPrefix",
            "return": {
                "description": "树的ID前缀",
                "type": "String"
            },
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 162,
            "description": "获取树的节点 label",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String|int"
                }
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 173,
            "description": "绑定树内部事件\n<br /><b>注意:</b> 所有事件名最终会被转换成小写",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 186,
            "description": "获取树的某类事件类型的所有回调",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 193,
            "description": "获取或设置树的高亮节点\n<br /><b>注意:</b> 这个只是数据层面的设置, 不会影响视觉效果",
            "itemtype": "method",
            "name": "highlight",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 205,
            "description": "树节点的点击事件",
            "itemtype": "event",
            "name": "click",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "example": [
                "\n           _tree.on('click', function( _evt ){\n               var _p = $(this);\n               UXC.log( 'tree click:', _p.html(), _p.attr('dataid'), _p.attr('dataname') );\n           });"
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 216,
            "description": "树节点的展现事件",
            "itemtype": "event",
            "name": "RenderLabel",
            "params": [
                {
                    "name": "_data",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           _tree.on('RenderLabel', function( _data ){\n               var _node = $(this);\n               _node.html( printf( '<a href=\"javascript:\" dataid=\"{0}\">{1}</a>', _data[0], _data[1] ) );\n           });"
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 228,
            "description": "树文件夹的点击事件",
            "itemtype": "event",
            "name": "FolderClick",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "example": [
                "\n           _tree.on('FolderClick', function( _evt ){\n               var _p = $(this);\n               alert( 'folder click' );\n           });"
            ],
            "class": "UXC.Tree",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 246,
            "description": "树要展示的容器",
            "itemtype": "property",
            "name": "_container",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 253,
            "description": "展现树需要的数据",
            "itemtype": "property",
            "name": "_data",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 260,
            "description": "树的随机ID前缀",
            "itemtype": "property",
            "name": "_id",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 267,
            "description": "树当前的高亮节点",
            "itemtype": "property",
            "name": "_highlight",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 274,
            "description": "保存树的所有绑定事件",
            "itemtype": "property",
            "name": "_events",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 286,
            "description": "树模型类内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 296,
            "description": "获取树所要展示的容器",
            "itemtype": "method",
            "name": "container",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 302,
            "description": "获取节点将要显示的ID",
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "_id",
                    "description": "节点的原始ID",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string  节点的最终ID"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 309,
            "description": "获取树的随机ID前缀",
            "itemtype": "method",
            "name": "idPrefix",
            "return": {
                "description": "string"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 315,
            "description": "获取树的原始数据",
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "object"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 321,
            "description": "获取树生成后的根节点",
            "itemtype": "method",
            "name": "root",
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 327,
            "description": "获取ID的具体节点",
            "itemtype": "method",
            "name": "child",
            "params": [
                {
                    "name": "_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 334,
            "description": "判断原始数据的某个ID是否有子级节点",
            "itemtype": "method",
            "name": "hasChild",
            "params": [
                {
                    "name": "_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 341,
            "description": "获取树的某类绑定事件的所有回调",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|undefined"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 352,
            "description": "添加树内部事件",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 364,
            "description": "获取或设置树的高亮节点\n<br /><b>注意:</b> 这个只是数据层面的设置, 不会影响视觉效果",
            "itemtype": "method",
            "name": "highlight",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 377,
            "description": "树的视图模型类",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 381,
            "description": "树的数据模型引用",
            "itemtype": "property",
            "name": "_model",
            "type": "UXC.Tree.Model",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 388,
            "description": "树生成后的根节点",
            "itemtype": "property",
            "name": "_treeRoot",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 398,
            "description": "初始化树的可视状态",
            "itemtype": "method",
            "name": "init",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 408,
            "description": "获取或设置树生成后的根节点",
            "itemtype": "method",
            "name": "treeRoot",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 419,
            "description": "处理树的展现效果",
            "itemtype": "method",
            "name": "_process",
            "params": [
                {
                    "name": "_data",
                    "description": "节点数据",
                    "type": "Array"
                },
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 440,
            "description": "初始化树根节点",
            "itemtype": "method",
            "name": "_initRoot",
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 470,
            "description": "初始化树的文件夹节点",
            "itemtype": "method",
            "name": "_initFolder",
            "params": [
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_isLast",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 495,
            "description": "初始化树的文件节点",
            "itemtype": "method",
            "name": "_initFile",
            "params": [
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_isLast",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 516,
            "description": "初始化树的节点标签",
            "itemtype": "method",
            "name": "_initLabel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 540,
            "description": "展开树的所有节点",
            "itemtype": "method",
            "name": "openAll",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 551,
            "description": "关闭树的所有节点",
            "itemtype": "method",
            "name": "closeAll",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 563,
            "description": "展开树到具体节点",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 588,
            "description": "关闭树的具体节点",
            "itemtype": "method",
            "name": "close",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 607,
            "description": "树的最后的 hover 节点\n<br />树的 hover 是全局属性, 页面上的所有树只会有一个当前 hover",
            "itemtype": "property",
            "name": "lastHover",
            "type": "selector",
            "default": "null",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 623,
            "description": "捕获树文件标签的点击事件",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 651,
            "description": "捕获树文件夹图标的点击事件",
            "class": "UXC.Tree.Model",
            "namespace": "UXC.Tree"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 134,
            "description": "验证一个表单项, 如 文本框, 下拉框, 复选框, 单选框, 文本域, 隐藏域",
            "itemtype": "method",
            "name": "check",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "-   需要验证规则正确与否的表单/表单项",
                    "type": "Selector"
                }
            ],
            "example": [
                " \n         UXC.Valid.check( $('input.needValid') );\n         UXC.Valid.check( document.getElementById('inputNeedValid') );\n\n         if( !UXC.Valid.check( $('form') ) ){\n             _evt.preventDefault();\n             return false;\n         }"
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 166,
            "description": "清除Valid生成的错误样式",
            "itemtype": "method",
            "name": "clearError",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "-     需要清除错误的选择器",
                    "type": "Form|input|textarea|select|file|password"
                }
            ],
            "example": [
                "\n         UXC.Valid.clearError( 'form' );\n         UXC.Valid.clearError( 'input.some' );"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 194,
            "description": "验证发生错误时, 是否终止继续验证\n<br /> 为真终止继续验证, 为假将验证表单的所有项, 默认为 false",
            "itemtype": "property",
            "name": "errorAbort",
            "type": "bool",
            "default": "false",
            "static": 1,
            "example": [
                "\n               $(document).ready( function($evt){\n                   UXC.Valid.errorAbort = true;\n               });"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 207,
            "description": "是否自动清除两边的空格",
            "itemtype": "property",
            "name": "autoTrim",
            "type": "bool",
            "default": "true",
            "static": 1,
            "example": [
                "\n               $(document).ready( function($evt){\n                   UXC.Valid.autoTrim = false;\n               });"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 219,
            "description": "检查一个表单是否有内容",
            "itemtype": "method",
            "name": "formHasValue",
            "params": [
                {
                    "name": "_fm",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ignoreSelector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "example": [
                "\n                $('form.js-valid').on('submit', function( $evt ){\n                   var _p = $(this);\n\n                   if( !UXC.Valid.formHasValue( _p ) ){\n                       $evt.preventDefault();\n                       UXC.alert( '表单内容为空, 不能提交!', _p.find('button[type=submit]'), 1 );\n                       return false;\n                   }\n\n                   if( !UXC.Valid.check( _p ) ){\n                       $evt.preventDefault();\n                       return false;\n                   }\n               });"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 283,
            "description": "把一个表单项的状态设为正确状态",
            "itemtype": "method",
            "name": "setValid",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_tm",
                    "description": "延时 _tm 毫秒显示处理结果, 默认=150",
                    "type": "Int"
                }
            ],
            "static": 1,
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 291,
            "description": "把一个表单项的状态设为错误状态",
            "itemtype": "method",
            "name": "setError",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 301,
            "description": "这个方法是 <a href='UXC.Valid.html#method_check'>Valid.check</a> 的别名",
            "itemtype": "method",
            "name": "checkAll",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "-   需要验证规则正确与否的表单/表单项",
                    "type": "Selector"
                }
            ],
            "see": [
                "Valid.check"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 310,
            "description": "响应表单子对象的 blur事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "access": "private",
            "tagname": "",
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 317,
            "description": "响应表单子对象的 change 事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "access": "private",
            "tagname": "",
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 324,
            "description": "私有逻辑处理对象, 验证所需的所有规则和方法都存放于此对象",
            "itemtype": "property",
            "name": "_logic",
            "type": "{Object}",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 333,
            "description": "分析_item是否附合规则要求",
            "itemtype": "method",
            "name": "_logic.parse",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 397,
            "description": "检查 _item 是否为 Valid 的检查对象",
            "itemtype": "method",
            "name": "_logic.isValidItem",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 419,
            "description": "显示正确的视觉效果",
            "itemtype": "method",
            "name": "_logic.valid",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_tm",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 437,
            "description": "显示错误的视觉效果",
            "itemtype": "method",
            "name": "_logic.error",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 471,
            "description": "获取 _selector 对象\n<br />这个方法的存在是为了向后兼容qwrap, qwrap DOM参数都为ID",
            "itemtype": "method",
            "name": "_logic.getElement",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 488,
            "description": "获取 _item 的检查类型, 所有可用的检查类型位于 _logic.datatype 对象",
            "itemtype": "method",
            "name": "_logic.getDatatype",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 499,
            "description": "获取 _item 的检查子类型, 所有可用的检查子类型位于 _logic.subdatatype 对象",
            "itemtype": "method",
            "name": "_logic.getSubdatatype",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 510,
            "description": "获取对应的错误信息, 默认的错误信息有 reqmsg, errmsg, <br />\n注意: 错误信息第一个字符如果为空格的话, 将完全使用用户定义的错误信息, 将不会动态添加 请上传/选择/填写",
            "itemtype": "method",
            "name": "_logic.getMsg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 544,
            "description": "计算字符串的字节长度, 非 ASCII 0-255的字符视为两个字节",
            "itemtype": "method",
            "name": "_logic.bytelen",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_s",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 555,
            "description": "获取日期字符串的 timestamp, 字符串格式为 YYYY[^\\d]*?MM[^\\d]*?DD",
            "itemtype": "method",
            "name": "_logic.getTimestamp",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_date_str",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 567,
            "description": "此对象存储可供检查的类型",
            "itemtype": "property",
            "name": "_logic.datatype",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 575,
            "description": "检查是否为正确的数字<br />\n<br>默认范围 0 - Math.pow(10, 10)",
            "itemtype": "method",
            "name": "_logic.datatype.n",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{integer|optional}      maxvalue    - 数值的上限",
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_n\" errmsg=\"请填写正确的正整数\" datatype=\"n\" >\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_n1\" errmsg=\"请填写正确的数字, 范围1-100\" datatype=\"n\" minvalue=\"1\", maxvalue=\"100\" >\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_n2\" errmsg=\"请填写正确的数字\" datatype=\"n-7.2\" >\n                       </div>\n"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 635,
            "description": "检查两个输入框的数值\n<br /> 数字格式为 0-pow(10,10)\n<br /> 带小数点使用 nrange-int.float, 例: nrange-1.2  nrange-2.2\n<br /> <b>注意:</b> 如果不显示指定 fromNEl, toNEl, \n             将会从父级查找 datatype=nrange属性的input, 如果数量等于2, 则会进行验证, 不等2将忽略",
            "itemtype": "method",
            "name": "_logic.datatype.nrange",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 数值的上限",
            "example": [
                "\n                   <div class=\"f-l label\">\n                       <label>(datatype nrange)正数:<br/><b style=\"color:red\">注意: 这个是大小颠倒位置的nrange</b></label>\n                       大<input type=\"text\" name=\"company_n10\" id=\"company_n10\" fromNEl=\"company_n11\"\n                           errmsg=\"请填写正确的数值范围\" datatype=\"nrange\" emEl=\"nrange_n1011\" >\n                       - 小<input type=\"text\" name=\"company_n11\" id=\"company_n11\" toNEl=\"company_n10\"\n                           errmsg=\"请填写正确的数值范围\" datatype=\"nrange\" emEl=\"nrange_n1011\" >\n                       <em id=\"nrange_n1011\"></em>\n                   </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 716,
            "description": "检查是否为合法的日期,\n<br />日期格式为 YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD",
            "itemtype": "method",
            "name": "_logic.datatype.d",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 日期的上限",
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_d\" errmsg=\"请填写正确的日期范围2013-05-01 - 2013-05-31\" datatype=\"daterange\" minvalue=\"2013-05-01\" maxvalue=\"2013-05-31\" >\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 754,
            "description": "检查两个输入框的日期\n<br />日期格式为 YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD\n<br /> <b>注意:</b> 如果不显示指定 fromDateEl, toDateEl, \n             将会从父级查找 datatype=datarange属性的input, 如果数量等于2, 则会进行验证, 不等2将忽略",
            "itemtype": "method",
            "name": "_logic.datatype.daterange",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 日期的上限",
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_daterange\" errmsg=\"请填写正确的日期范围,并且起始日期不能大于结束日期\" id=\"start_date\" \n                               datatype=\"daterange\" toDateEl=\"end_date\" emEl=\"date-err-em\" >\n                           - <input type=\"TEXT\" name=\"company_daterange\" errmsg=\"请填写正确的日期范围,并且起始日期不能大于结束日期\" id=\"end_date\" \n                               datatype=\"daterange\" fromDateEl=\"start_date\" emEl=\"date-err-em\" >\n                           <br /><em id=\"date-err-em\"></em>\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 822,
            "description": "检查时间格式, 格式为 hh:mm:ss",
            "itemtype": "method",
            "name": "_logic.datatype.time",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_time\" errmsg=\"正确的时间, 格式为 hh:mm:ss\" datatype=\"time\" >\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 839,
            "description": "检查时间格式, 格式为 hh:mm",
            "itemtype": "method",
            "name": "_logic.datatype.minute",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_time\" errmsg=\"正确的时间, 格式为 hh:mm\" datatype=\"minute\" >\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 856,
            "description": "检查银行卡号码\n<br />格式为 d{19} | d{16} | 1111 1111 1111 1111 111 | 1111 1111 1111 1111111",
            "itemtype": "method",
            "name": "_logic.datatype.bankcard",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_idnumber\" \n                               datatype=\"idnumber\" errmsg=\"请填写正确的身份证号码\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 875,
            "description": "检查中文姓名\n<br>格式: 汉字和大小写字母\n<br>规则: 长度 2-32个字节, 非 ASCII 算2个字节",
            "itemtype": "method",
            "name": "_logic.datatype.cnname",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_cnname\" \n                               datatype=\"cnname\" reqmsg=\"姓名\" errmsg=\"请填写正确的姓名\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 895,
            "description": "检查注册用户名\n<br>格式: a-zA-Z0-9_-\n<br>规则: 首字母必须为 [a-zA-Z0-9], 长度 2 - 30",
            "itemtype": "method",
            "name": "_logic.datatype.username",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_username\" \n                               datatype=\"username\" reqmsg=\"用户名\" errmsg=\"请填写正确的用户名\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 915,
            "description": "检查身份证号码<br />\n目前只使用最简单的位数判断~ 有待完善",
            "itemtype": "method",
            "name": "_logic.datatype.idnumber",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                   <div class=\"f-l\">\n                       <input type=\"TEXT\" name=\"company_idnumber\" \n                           datatype=\"idnumber\" errmsg=\"请填写正确的身份证号码\">\n                   </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 934,
            "description": "检查手机号码<br />",
            "itemtype": "method",
            "name": "_logic.datatype.mobilecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n                   <div class=\"f-l\">\n                       <input type=\"TEXT\" name=\"company_mobile\" \n                           datatype=\"mobilecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_phonecode]\" alternativemsg=\" \"\n                           errmsg=\"请填写正确的手机号码\">\n                   </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 954,
            "description": "检查手机号码\n<br />这个方法是 _logic.datatype.mobilecode 的别名",
            "itemtype": "method",
            "name": "_logic.datatype.mobile",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 967,
            "description": "检查手机号码加强方法\n<br>格式: [+国家代码] [零]11位数字",
            "itemtype": "method",
            "name": "_logic.datatype.mobilezonecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_mobilezone\" \n                               datatype=\"mobilezonecode\" \n                               errmsg=\"请填写正确的手机号码\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 988,
            "description": "检查电话号码\n<br>格式: 7/8位数字",
            "itemtype": "method",
            "name": "_logic.datatype.phonecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div>\n                           <input type='TEXT' name='company_phonecode' style=\"width:80px;\" value='' size=\"8\" \n                               datatype=\"phonecode\" errmsg=\"请检查电话号码格式\" emEl=\"#phone-err-em\" />\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1007,
            "description": "检查电话号码\n<br>格式: [区号]7/8位电话号码",
            "itemtype": "method",
            "name": "_logic.datatype.phone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_phone\" \n                               datatype=\"phone\" \n                               errmsg=\"请填写正确的电话号码\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1028,
            "description": "检查电话号码\n<br>格式: [+国家代码][ ][电话区号][ ]7/8位电话号码[#分机号]",
            "itemtype": "method",
            "name": "_logic.datatype.phoneall",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_mobilezone\" \n                               datatype=\"phoneall\" \n                               errmsg=\"请填写正确的电话号码\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1049,
            "description": "检查电话区号",
            "itemtype": "method",
            "name": "_logic.datatype.phonezone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div>\n                           <input type='TEXT' name='company_phonezone' style=\"width:40px;\" value='' size=\"4\" \n                               datatype=\"phonezone\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的电话区号\" />\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1067,
            "description": "检查电话分机号码",
            "itemtype": "method",
            "name": "_logic.datatype.phoneext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div>\n                           <input type='TEXT' name='company_phoneext' style=\"width:40px;\" value='' size=\"4\" \n                               datatype=\"phoneext\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的分机号\" />\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1085,
            "description": "检查手机号码/电话号码\n<br />这个方法是原有方法的混合验证 _logic.datatype.mobilecode + _logic.datatype.phone",
            "itemtype": "method",
            "name": "_logic.datatype.mobilephone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l label\">\n                           <label>(datatype mobilephone, phone + mobilecode)手机号码或电话号码:</label>\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"text\" name=\"company_mobilephone\" \n                               datatype=\"mobilephone\"\n                               errmsg=\"请填写正确的手机/电话号码\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1109,
            "description": "检查手机号码/电话号码, 泛匹配\n<br />这个方法是原有方法的混合验证 _logic.datatype.mobilezonecode + _logic.datatype.phoneall",
            "itemtype": "method",
            "name": "_logic.datatype.mobilephoneall",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l label\">\n                           <label>(datatype mobilephoneall, phoneall + mobilezonecode)手机号码或电话号码:</label>\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"text\" name=\"company_mobilephoneall\" \n                               datatype=\"mobilephoneall\"\n                               errmsg=\"请填写正确的手机/电话号码\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1133,
            "description": "检查内容的长度",
            "itemtype": "method",
            "name": "_logic.datatype.length",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{integer}   maxlength       内容最大长度",
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_name\" minlength=\"2\" maxlength=\"120\" reqmsg=\"公司名称\" errmsg=\"请检查格式,长度2-120\" /> <em>公司名称描述</em>\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1162,
            "description": "根据特殊的 datatype 实现不同的计算方法",
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1188,
            "description": "检查内容是否为空,\n<br>如果声明了该属性, 那么 value 须不为空",
            "itemtype": "method",
            "name": "_logic.datatype.reqmsg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_name\" reqmsg=\"公司名称\" /> <em>公司名称描述</em>\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1214,
            "description": "自定义正则校验",
            "itemtype": "method",
            "name": "_logic.datatype.reg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{string}    reg-pattern     正则规则 /规则/选项",
            "example": [
                "\n                           <div><input type=\"TEXT\" name=\"company_addr\" datatype=\"reg\" reg-pattern=\"/^[\\s\\S]{2,120}$/i\" errmsg=\"请填写正确的地址\"></div>\n                           <div><input type=\"TEXT\" name=\"company_addr\" datatype=\"reg-/^[\\s\\S]{2,120}$/i\" errmsg=\"请填写正确的地址\"></div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1240,
            "description": "检查验证码<br />\n格式: 为 0-9a-zA-Z, 长度 默认为4",
            "itemtype": "method",
            "name": "_logic.datatype.vcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{string}    datatype    vcode|vcode-[\\d]+",
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_vcode\" style=\"width: 40px;\"\n                               datatype=\"vcode\" reqmsg=\"验证码\" errmsg=\"请填写正确的验证码\">\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_vcode\" style=\"width: 40px;\"\n                               datatype=\"vcode-5\" errmsg=\"请填写正确的验证码\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1266,
            "description": "检查文本长度",
            "itemtype": "method",
            "name": "_logic.datatype.text",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "_logic.datatype.length"
            ],
            "attr": "{string}    datatype    text",
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1275,
            "description": "检查文本的字节长度",
            "itemtype": "method",
            "name": "_logic.datatype.bytetext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "_logic.datatype.length"
            ],
            "attr": "{string}    datatype    bytetext",
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1284,
            "description": "检查富文本的字节\n<br />TODO: 完成富文本长度检查",
            "itemtype": "method",
            "name": "_logic.datatype.richtext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "_logic.datatype.length"
            ],
            "attr": "{string}    datatype    richtext",
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1294,
            "description": "检查URL",
            "itemtype": "method",
            "name": "_logic.datatype.url",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_url\" datatype=\"url\" errmsg=\"请填写正确的网址\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1311,
            "description": "检查域名",
            "itemtype": "method",
            "name": "_logic.datatype.domain",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item!~YUIDOC_LINE~!",
                    "description": "<div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_domain\" datatype=\"domain\" reqmsg=\"域名\" errmsg=\"请填写正确的域名\">\n                       </div>",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1328,
            "description": "检查域名",
            "itemtype": "method",
            "name": "_logic.datatype.stricdomain",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item!~YUIDOC_LINE~!",
                    "description": "<div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_domain\" datatype=\"stricdomain\" reqmsg=\"域名\" errmsg=\"请填写正确的域名\">\n                       </div>",
                    "type": "Selector"
                }
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1344,
            "description": "检查电子邮件",
            "itemtype": "method",
            "name": "_logic.datatype.email",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_email\" datatype=\"email\" reqmsg=\"邮箱\" errmsg=\"请填写正确的邮箱\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1361,
            "description": "检查邮政编码",
            "itemtype": "method",
            "name": "_logic.datatype.zipcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_zipcode\" datatype=\"zipcode\" errmsg=\"请填写正确的邮编\">\n                       </div>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1379,
            "description": "此对象存储可供检查的子类型",
            "itemtype": "property",
            "name": "_logic.subdatatype",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1387,
            "description": "此类型检查 2|N个对象必须至少有一个是有输入内容的, \n<br> 常用于 手机/电话 二填一",
            "itemtype": "method",
            "name": "_logic.subdatatype.alternative",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <dd>\n                       <div class=\"f-l label\">\n                           <label>(datatype phonezone, phonecode, phoneext)电话号码:</label>\n                       </div>\n                       <div class=\"f-l\">\n                           <input type='TEXT' name='company_phonezone' style=\"width:40px;\" value='' size=\"4\" \n                               datatype=\"phonezone\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的电话区号\" />\n                           - <input type='TEXT' name='company_phonecode' style=\"width:80px;\" value='' size=\"8\" \n                               datatype=\"phonecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_mobile]\" alternativemsg=\"电话号码和手机号码至少填写一个\"\n                               errmsg=\"请检查电话号码格式\" emEl=\"#phone-err-em\" />\n                           - <input type='TEXT' name='company_phoneext' style=\"width:40px;\" value='' size=\"4\" \n                               datatype=\"phoneext\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的分机号\" />\n                           <em id=\"phone-err-em\"></em>\n                       </div>\n                       </dd>\n\n                       <dd>\n                       <div class=\"f-l label\">\n                           <label>(datatype mobilecode)手机号码:</label>\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"TEXT\" name=\"company_mobile\" \n                               datatype=\"mobilecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_phonecode]\" alternativemsg=\" \"\n                               errmsg=\"请填写正确的手机号码\">\n                       </div>\n                       </dd>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1444,
            "description": "此类型检查 2|N 个对象填写的值必须一致\n常用于注意时密码验证/重置密码",
            "itemtype": "method",
            "name": "_logic.subdatatype.reconfirm",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n                       <dd>\n                       <div class=\"f-l label\">\n                           <label>(datatype text, subdatatype reconfirm)用户密码:</label>\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"PASSWORD\" name=\"company_pwd\" \n                           datatype=\"text\" subdatatype=\"reconfirm\" datatarget=\"input[name=company_repwd]\" reconfirmmsg=\"用户密码和确认密码不一致\"\n                           minlength=\"6\" maxlength=\"15\" reqmsg=\"用户密码\" errmsg=\"请填写正确的用户密码\">\n                       </div>\n                       </dd>\n\n                       <dd>\n                       <div class=\"f-l label\">\n                           <label>(datatype text, subdatatype reconfirm)确认密码:</label>\n                       </div>\n                       <div class=\"f-l\">\n                           <input type=\"PASSWORD\" name=\"company_repwd\" \n                           datatype=\"text\" subdatatype=\"reconfirm\" datatarget=\"input[name=company_pwd]\" reconfirmmsg=\"确认密码和用户密码不一致\"\n                           minlength=\"6\" maxlength=\"15\" reqmsg=\"确认密码\" errmsg=\"请填写正确的确认密码\">\n                       </div>\n                       </dd>"
            ],
            "class": "UXC.Valid",
            "namespace": "UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 3,
            "description": "Top level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 10,
            "access": "private",
            "tagname": "",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 17,
            "description": "Use <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "access": "private",
            "tagname": "",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 25,
            "description": "Show diagnostic messages in the console if set to true",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 31,
            "description": "Default interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 37,
            "description": "Default timeout interval in milliseconds for waitsFor() blocks.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 50,
            "description": "Allows for bound functions to be compared.  Internal use only.",
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "base",
                    "description": "bound 'this' for the function",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "function to find",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 114,
            "description": "Getter for the Jasmine environment. Ensures one gets created",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 122,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 132,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 142,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 152,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "typeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 163,
            "description": "Pretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": "an object to be outputted",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 175,
            "description": "Returns true if the object is a DOM Node.",
            "params": [
                {
                    "name": "obj",
                    "description": "object to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 185,
            "description": "Returns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "example": [
                "\n// don't care about which function is passed in, as long as it's a function\nexpect(mySpy).toHaveBeenCalledWith(jasmine.any(Function));"
            ],
            "params": [
                {
                    "name": "clazz",
                    "description": "",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "matchable object of the type clazz"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 199,
            "description": "Returns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "example": [
                "\n// don't care about any other attributes than foo.\nexpect(mySpy).toHaveBeenCalledWith(jasmine.objectContaining({foo: \"bar\"});"
            ],
            "params": [
                {
                    "name": "sample",
                    "description": "sample",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "matchable object for the sample"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 214,
            "description": "Jasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "example": [
                "\n// a stub\nvar myStub = jasmine.createSpy('myStub');  // can be used anywhere\n\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// actual foo.not will not be called, execution stops\nspyOn(foo, 'not');\n\n// foo.not spied upon, execution will continue to implementation\nspyOn(foo, 'not').andCallThrough();\n\n// fake example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// foo.not(val) will return val\nspyOn(foo, 'not').andCallFake(function(value) {return value;});\n\n// mock example\nfoo.not(7 == 7);\nexpect(foo.not).toHaveBeenCalled();\nexpect(foo.not).toHaveBeenCalledWith(true);"
            ],
            "is_constructor": 1,
            "see": [
                "spyOn",
                "jasmine.createSpy",
                "jasmine.createSpyObj"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 259,
            "description": "The name of the spy, if provided.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 263,
            "description": "Is this Object a spy?",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 267,
            "description": "The actual function this spy stubs.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 272,
            "description": "Tracking of the most recent call to the spy.",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy.mostRecentCall.args = [1, 2];"
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 281,
            "description": "Holds arguments for each call to the spy, indexed by call count",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy(7, 8);\nmySpy.mostRecentCall.args = [7, 8];\nmySpy.argsForCall[0] = [1, 2];\nmySpy.argsForCall[1] = [7, 8];"
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 295,
            "description": "Tells a spy to call through to the actual implemenatation.",
            "example": [
                "\nvar foo = {\n  bar: function() { // do some stuff }\n}\n\n// defining a spy on an existing property: foo.bar\nspyOn(foo, 'bar').andCallThrough();"
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 311,
            "description": "For setting the return value of a spy.",
            "example": [
                "\n// defining a spy from scratch: foo() returns 'baz'\nvar foo = jasmine.createSpy('spy on foo').andReturn('baz');\n\n// defining a spy on an existing property: foo.bar() returns 'baz'\nspyOn(foo, 'bar').andReturn('baz');"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 330,
            "description": "For throwing an exception when a spy is called.",
            "example": [
                "\n// defining a spy from scratch: foo() throws an exception w/ message 'ouch'\nvar foo = jasmine.createSpy('spy on foo').andThrow('baz');\n\n// defining a spy on an existing property: foo.bar() throws an exception w/ message 'ouch'\nspyOn(foo, 'bar').andThrow('baz');"
            ],
            "params": [
                {
                    "name": "exceptionMsg",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 349,
            "description": "Calls an alternate implementation when a spy is called.",
            "example": [
                "\nvar baz = function() {\n  // do some stuff, return something\n}\n// defining a spy from scratch: foo() calls the function baz\nvar foo = jasmine.createSpy('spy on foo').andCall(baz);\n\n// defining a spy on an existing property: foo.bar() calls an anonymnous function\nspyOn(foo, 'bar').andCall(function() { return 'baz';} );"
            ],
            "params": [
                {
                    "name": "fakeFunc",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 369,
            "description": "Resets all of a spy's the tracking variables so that it can be used again.",
            "example": [
                "\nspyOn(foo, 'bar');\n\nfoo.bar();\n\nexpect(foo.bar.callCount).toEqual(1);\n\nfoo.bar.reset();\n\nexpect(foo.bar.callCount).toEqual(0);"
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 415,
            "description": "Determines whether an object is a spy.",
            "params": [
                {
                    "name": "putativeSpy",
                    "description": "",
                    "type": "jasmine.Spy|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 425,
            "description": "Creates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "params": [
                {
                    "name": "baseName",
                    "description": "name of spy class",
                    "type": "String"
                },
                {
                    "name": "methodNames",
                    "description": "array of names of methods to make spies",
                    "type": "Array"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 443,
            "description": "All parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 453,
            "description": "Function that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "example": [
                "\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\nspyOn(foo, 'not'); // actual foo.not will not be called, execution stops"
            ],
            "see": [
                "jasmine.createSpy"
            ],
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "methodName",
                    "description": ""
                }
            ],
            "return": {
                "description": "a Jasmine spy that can be chained with all spy methods"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 473,
            "description": "Creates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "example": [
                "\nit('should be true', function() {\n  expect(true).toEqual(true);\n});"
            ],
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 491,
            "description": "Creates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 504,
            "description": "Starts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "params": [
                {
                    "name": "actual",
                    "description": "Actual value to test against and expected value",
                    "type": "Object"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 517,
            "description": "Defines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "params": [
                {
                    "name": "func",
                    "description": "Function that defines part of a jasmine spec.",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 527,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 538,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 550,
            "description": "A function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "params": [
                {
                    "name": "beforeEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 562,
            "description": "A function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "params": [
                {
                    "name": "afterEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 574,
            "description": "Defines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "example": [
                "\n// TODO: a simple suite\n\n// TODO: a simple suite with a nested describe block"
            ],
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 594,
            "description": "Disables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 633,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 638,
            "description": "Declare that a child class inherit it's prototype from the parent class.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "childClass",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentClass",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 646,
            "access": "private",
            "tagname": "",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 700,
            "description": "Environment for Jasmine",
            "is_constructor": 1,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 738,
            "return": {
                "description": "an object containing jasmine version build info, if set."
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 749,
            "return": {
                "description": "string containing jasmine version build info, if set."
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 766,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 773,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 780,
            "description": "Register a reporter to receive status updates from Jasmine.",
            "params": [
                {
                    "name": "reporter",
                    "description": "An object which will receive status updates.",
                    "type": "jasmine.Reporter"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 977,
            "is_constructor": 1,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1008,
            "description": "Blocks are functions with executable code that make up a spec.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "func",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1030,
            "is_constructor": 1,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1132,
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "actual",
                    "description": ""
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1209,
            "description": "toBe: compares the actual to the expected using ===",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1217,
            "description": "toNotBe: compares the actual to the expected using !==",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toBe() instead.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1226,
            "description": "toEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1235,
            "description": "toNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toEqual() instead.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1244,
            "description": "Matcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1254,
            "description": "Matcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toMatch() instead.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1263,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1270,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1277,
            "description": "Matcher that compares the actual to null.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1284,
            "description": "Matcher that boolean not-nots the actual.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1292,
            "description": "Matcher that boolean nots the actual.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1300,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1322,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1325,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was not called.",
            "deprecated": true,
            "deprecationMessage": "Use expect(xxx).not.toHaveBeenCalled() instead",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1349,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "example": [
                "\n"
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1378,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1381,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1398,
            "description": "Matcher that checks that the expected item is an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1407,
            "description": "Matcher that checks that the expected item is NOT an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toContain() instead.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1425,
            "description": "Matcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1442,
            "description": "Matcher that checks that the expected exception was thrown by the actual.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1619,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1715,
            "is_constructor": 1,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1750,
            "description": "Holds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "is_constructor": 1,
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1756,
            "description": "The total count of results",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1760,
            "description": "Number of passed results",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1764,
            "description": "Number of failed results",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1768,
            "description": "Was this suite/spec skipped?",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1772,
            "ignore": "",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1778,
            "description": "Roll up the result counts.",
            "params": [
                {
                    "name": "result",
                    "description": ""
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1789,
            "description": "Adds a log message.",
            "params": [
                {
                    "name": "values",
                    "description": "Array of message parts which will be concatenated later."
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1797,
            "description": "Getter for the results: message & results.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1804,
            "description": "Adds a result, tracking counts (total, passed, & failed)",
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult|jasmine.NestedResults"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1824,
            "return": {
                "description": "True if <b>everything</b> below passed",
                "type": "Boolean"
            },
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1830,
            "description": "Base class for pretty printing for expectation results.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1837,
            "description": "Formats a value in a nice, human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2052,
            "description": "Runner",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2129,
            "description": "Internal representation of a Jasmine specification, or test.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "suite",
                    "description": "",
                    "type": "jasmine.Suite"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2168,
            "description": "All parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2191,
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2204,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2216,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2372,
            "description": "Internal representation of a Jasmine suite.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentSuite",
                    "description": "",
                    "type": "jasmine.Suite"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2469,
            "description": "A block which waits for some condition to become true, with timeout.",
            "is_constructor": 1,
            "extends": "jasmine.Block",
            "params": [
                {
                    "name": "env",
                    "description": "The Jasmine environment.",
                    "type": "jasmine.Env"
                },
                {
                    "name": "timeout",
                    "description": "The maximum time in milliseconds to wait for the condition to become true.",
                    "type": "Number"
                },
                {
                    "name": "latchFunction",
                    "description": "A function which returns true when the desired condition has been met.",
                    "type": "Function"
                },
                {
                    "name": "message",
                    "description": "The message to display if the desired condition hasn't been met within the given time period.",
                    "type": "String"
                },
                {
                    "name": "spec",
                    "description": "The Jasmine spec.",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.UXC"
        },
        {
            "file": "../UXC.js",
            "line": 19,
            "description": "UXC组件库所在路径",
            "itemtype": "property",
            "name": "PATH",
            "static": 1,
            "type": "{string}",
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 27,
            "description": "是否显示调试信息",
            "itemtype": "property",
            "name": "debug",
            "static": 1,
            "type": "{bool}",
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 34,
            "description": "导入UXC组件",
            "itemtype": "method",
            "name": "use",
            "static": 1,
            "params": [
                {
                    "name": "_names",
                    "description": "-            模块名\n                                          或者模块下面的某个js文件(test/test1.js, 路径前面不带\"/\"将视为test模块下的test1.js)\n                                          或者一个绝对路径的js文件, 路径前面带 \"/\"",
                    "type": "String"
                },
                {
                    "name": "_basePath",
                    "description": "-         指定要导入资源所在的主目录, 这个主要应用于 nginx 路径输出",
                    "type": "String"
                },
                {
                    "name": "_enableNginxStyle",
                    "description": "-       指定是否需要使用 nginx 路径输出脚本资源",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               UXC.use( 'SomeClass' );                              //导入类 SomeClass\n               UXC.use( 'SomeClass, AnotherClass' );                //导入类 SomeClass, AnotherClass\n               //\n               ///  导入类 SomeClass, SomeClass目录下的file1.js, \n               ///  AnotherClass, AnotherClass 下的file2.js\n               //\n               UXC.use( 'SomeClass, comps/SomeClass/file1.js, comps/AnotherClass/file2.js' );   \n               UXC.use( 'SomeClass, plugins/swfobject.js., plugins/json2.js' );   \n               UXC.use( '/js/Test/Test1.js' );     //导入文件  /js/Test/Test1.js, 如果起始处为 \"/\", 将视为文件的绝对路径\n               //\n               /// 导入 URL 资源 // UXC.use( 'http://test.com/file1.js', 'https://another.com/file2.js' ); "
            ],
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 91,
            "description": "输出调试信息, 可通过 UXC.debug 指定是否显示调试信息",
            "params": [
                {
                    "name": "任意参数任意长度的字符串内容",
                    "description": "",
                    "type": "[string[,string]]"
                }
            ],
            "itemtype": "method",
            "name": "log",
            "static": 1,
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 102,
            "description": "定义输出路径的 v 参数, 以便控制缓存",
            "itemtype": "property",
            "name": "pathPostfix",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 110,
            "description": "是否启用nginx concat 模块的路径格式",
            "itemtype": "property",
            "name": "enableNginxStyle",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 118,
            "description": "定义 nginx style 的基础路径\n<br /><b>注意:</b> 如果这个属性为空, 即使 enableNginxStyle = true, 也是直接输出默认路径",
            "itemtype": "property",
            "name": "nginxBasePath",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 127,
            "description": "输出 nginx concat 模块的脚本路径格式",
            "itemtype": "method",
            "name": "_writeNginxScript",
            "params": [
                {
                    "name": "_paths",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 155,
            "description": "输出的脚本路径格式",
            "itemtype": "method",
            "name": "_writeNormalScript",
            "params": [
                {
                    "name": "_paths",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 172,
            "description": "资源路径映射对象\n<br />设置 UXC.use 逗号(',') 分隔项的 对应URL路径",
            "itemtype": "property",
            "name": "FILE_MAP",
            "type": "object",
            "default": "null",
            "static": 1,
            "example": [
                "\n               以下例子假定 libpath = http://git.me.btbtd.org/ignore/360UXC_dev/\n               <script>\n                   UXC.FILE_MAP = {\n                       'Calendar': 'http://uxc.btbtd.org/comps/Calendar/Calendar.js'\n                       , 'Form': 'http://uxc.btbtd.org/comps/Form/Form.js'\n                       , 'LunarCalendar': 'http://uxc.btbtd.org/comps/LunarCalendar/LunarCalendar.js'\n                       , 'Panel': 'http://uxc.btbtd.org/comps/Panel/Panel.js' \n                       , 'Tab': 'http://uxc.btbtd.org/comps/Tab/Tab.js'\n                       , 'Tips': 'http://uxc.btbtd.org/comps/Tips/Tips.js' \n                       , 'Tree': 'http://uxc.btbtd.org/comps/Tree/Tree.js'\n                       , 'Valid': 'http://uxc.btbtd.org/comps/Valid/Valid.js'\n                       , 'plugins/jquery.form.js': 'http://uxc.btbtd.org/plugins/jquery.form.js'\n                       , 'plugins/json2.js': 'http://uxc.btbtd.org/plugins/json2.js'\n                   };\n\n                   UXC.use( 'Panel, Tips, Valid, plugins/jquery.form.js' );\n\n                   $(document).ready(function(){\n                       //UXC.Dialog( 'UXC.use example', 'test issue' );\n                   });\n               </script>\n\n               output should be:\n                   http://git.me.btbtd.org/ignore/360UXC_dev/lib.js\n                   http://uxc.btbtd.org/comps/Panel/Panel.js\n                   http://uxc.btbtd.org/comps/Tips/Tips.js\n                   http://uxc.btbtd.org/comps/Valid/Valid.js\n                   http://uxc.btbtd.org/plugins/jquery.form.js"
            ],
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 211,
            "description": "如果 console 不可用, 则生成一个模拟的 console 对象",
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../UXC.js",
            "line": 217,
            "description": "自动识别组件库所在路径",
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../common.js",
            "line": 7,
            "description": "按格式输出字符串",
            "itemtype": "method",
            "name": "printf",
            "static": 1,
            "params": [
                {
                    "name": "_str",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n     printf( 'asdfasdf{0}sdfasdf{1}', '000', 1111 );\n     //return asdfasdf000sdfasdf1111"
            ],
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 22,
            "description": "判断URL中是否有某个get参数",
            "itemtype": "method",
            "name": "has_url_param",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n     var bool = has_url_param( 'getkey' );"
            ],
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 43,
            "description": "添加URL参数\n<br /><b>require:</b> del\\_url\\_param",
            "itemtype": "method",
            "name": "add_url_params",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "$params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "example": [
                "\n       var url = add_url_params( location.href, {'key1': 'key1value', 'key2': 'key2value' } );"
            ],
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 68,
            "description": "取URL参数的值\n<br /><b>require:</b> del\\_url\\_param",
            "itemtype": "method",
            "name": "get_url_param",
            "static": 1,
            "params": [
                {
                    "name": "$url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "$key",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n       var defaultTag = get_url_param(location.href, 'tag');  "
            ],
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 96,
            "description": "删除URL参数",
            "itemtype": "method",
            "name": "del_url_param",
            "static": 1,
            "params": [
                {
                    "name": "$url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "$key",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n       var url = del_url_param( location.href, 'tag' );"
            ],
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 123,
            "description": "提示需要 HTTP 环境",
            "itemtype": "method",
            "name": "httpRequire",
            "static": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "要提示的文字, 默认 \"本示例需要HTTP环境'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool     如果是HTTP环境返回true, 否则返回false"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 138,
            "description": "删除 URL 的锚点\n<br /><b>require:</b> add\\_url\\_params",
            "itemtype": "method",
            "name": "removeUrlSharp",
            "static": 1,
            "params": [
                {
                    "name": "$url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "$nornd",
                    "description": "是否不添加随机参数",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 152,
            "description": "重载页面\n<br /><b>require:</b> removeUrlSharp\n<br /><b>require:</b> add\\_url\\_params",
            "itemtype": "method",
            "name": "reload_page",
            "static": 1,
            "params": [
                {
                    "name": "$url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "$nornd",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "$delayms",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 170,
            "description": "取小数点的N位，\n<br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题",
            "itemtype": "method",
            "name": "parse_finance_num",
            "static": 1,
            "params": [
                {
                    "name": "$i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "$dot",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "number"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 186,
            "description": "js 附加字串函数 pad_char_f",
            "itemtype": "method",
            "name": "pad_char_f",
            "static": 1,
            "params": [
                {
                    "name": "_str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_len",
                    "description": "",
                    "type": "Intl"
                },
                {
                    "name": "_char",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 202,
            "description": "格式化日期为 YYYY-mm-dd 格式\n<br /><b>require</b>: pad\\_char\\_f",
            "itemtype": "method",
            "name": "formatISODate",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "要格式化日期的日期对象",
                    "type": "Date"
                },
                {
                    "name": "_split",
                    "description": "定义年月日的分隔符, 默认为 '-'",
                    "type": "String|undefined"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 216,
            "description": "从 ISODate 字符串解析日期对象",
            "itemtype": "method",
            "name": "parseISODate",
            "static": 1,
            "params": [
                {
                    "name": "_datestr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "date"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 234,
            "description": "克隆日期对象",
            "itemtype": "method",
            "name": "cloneDate",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "需要克隆的日期",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "需要克隆的日期对象",
                "type": "Date"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 242,
            "description": "判断两个日期是否为同一天",
            "itemtype": "method",
            "name": "isSameDay",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 254,
            "description": "判断两个日期是否为同一月份",
            "itemtype": "method",
            "name": "isSameMonth",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 266,
            "description": "取得一个月份中最大的一天",
            "itemtype": "method",
            "name": "maxDayOfMonth",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "月份中最大的一天",
                "type": "Int"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 279,
            "description": "取当前脚本标签的 src路径",
            "itemtype": "method",
            "name": "script_path_f",
            "static": 1,
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 291,
            "description": "缓动函数, 动画效果为按时间缓动 \n<br />这个函数只考虑递增, 你如果需要递减的话, 在回调里用 _maxVal - _stepval",
            "itemtype": "method",
            "name": "easyEffect",
            "static": 1,
            "params": [
                {
                    "name": "_cb",
                    "description": "缓动运动时的回调",
                    "type": "Function"
                },
                {
                    "name": "_maxVal",
                    "description": "缓动的最大值, default = 200",
                    "type": "Number"
                },
                {
                    "name": "_startVal",
                    "description": "缓动的起始值, default = 0",
                    "type": "Number"
                },
                {
                    "name": "_duration",
                    "description": "缓动的总时间, 单位毫秒, default = 200",
                    "type": "Number"
                },
                {
                    "name": "_stepMs",
                    "description": "缓动的间隔, 单位毫秒, default = 2",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "interval"
            },
            "example": [
                "\n       $(document).ready(function(){\n           window.js_output = $('span.js_output');\n           window.ls = [];\n           window.EFF_INTERVAL = easyEffect( effectcallback, 100);\n       });\n\n       function effectcallback( _stepval, _done ){\n           js_output.html( _stepval );\n           ls.push( _stepval );\n\n           !_done && js_output.html( _stepval );\n           _done && js_output.html( _stepval + '<br />' + ls.join() );\n       }"
            ],
            "class": ".window"
        },
        {
            "file": "../common.js",
            "line": 336,
            "description": "把输入值转换为布尔值",
            "itemtype": "method",
            "name": "parseBool",
            "params": [
                {
                    "name": "_input",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 2,
            "description": "取当前脚本标签的 src路径",
            "author": "scuehs@btbtd.org 2013-05-23",
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": "",
            "namespace": "window"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " ../comps/Calendar/UXC.Calendar.js:4"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Calendar/UXC.Calendar.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/UXC.Form.initAutoFill.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/UXC.Form.initAutoFill.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/UXC.Form.initAutoSelect.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/UXC.Form.initAutoSelect.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/UXC.Form.initCheckAll.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/UXC.Form.initCheckAll.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/UXC.Form.initNumericStepper.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/UXC.Form.initNumericStepper.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/UXC.Form.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/UXC.Form.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:7"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:7"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Dialog.js:129"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Dialog.js:129"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Dialog.js:129"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Dialog.js:129"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Dialog.js:129"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Panel/UXC.Panel.js:5"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Panel/UXC.Panel.js:5"
        },
        {
            "message": "unknown tag: prototype",
            "line": " ../comps/Panel/UXC.Panel.js:582"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Popup.js:67"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Popup.js:67"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Popup.js:67"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Popup.js:67"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/UXC.Popup.js:67"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Slider/Slider.js:6"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Slider/Slider.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Tab/Tab.js:5"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Tab/Tab.js:5"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Test/Test.js:6"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Test/Test.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Tips/Tips.js:6"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Tips/Tips.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Tree/Tree.js:4"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Tree/Tree.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Valid/Valid.js:4"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Valid/Valid.js:4"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:575"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:575"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:575"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:635"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:635"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:635"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:635"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:635"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:716"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:716"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:716"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:754"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:754"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:754"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:754"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:754"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1133"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1133"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1133"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1214"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1240"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1266"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1275"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1284"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:50"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:122"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:132"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:142"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:415"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:453"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:738"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:766"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:773"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1772"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1824"
        },
        {
            "message": "unknown tag: date",
            "line": " ../UXC.js:3"
        },
        {
            "message": "Missing item type\n//TODO 添加事件响应机制",
            "line": " ../comps/Calendar/UXC.Calendar.js:29"
        },
        {
            "message": "Missing item type\n延迟200毫秒初始化页面的所有日历控件\n之所以要延迟是可以让用户自己设置是否需要自动初始化",
            "line": " ../comps/Calendar/UXC.Calendar.js:620"
        },
        {
            "message": "Missing item type\n元旦开始的第一个星期一开始的一周为政治经济上的第一周",
            "line": " ../comps/Calendar/UXC.Calendar.pickWeek.js:206"
        },
        {
            "message": "Missing item type\n取当前脚本标签的 src路径",
            "line": " ../comps/Form/Form.js:2"
        },
        {
            "message": "Missing item type\n判断下拉框的option里是否有给定的值",
            "line": " ../comps/Form/UXC.Form.initAutoSelect.js:583"
        },
        {
            "message": "Missing item type\n页面加载完毕时, 延时进行自动化, 延时可以避免来自其他逻辑的干扰",
            "line": " ../comps/Form/UXC.Form.initAutoSelect.js:653"
        },
        {
            "message": "Missing item type\n监听 全选/反选 按钮的点击事件",
            "line": " ../comps/Form/UXC.Form.initCheckAll.js:78"
        },
        {
            "message": "Missing item type\n判断 input 是否为 全选反选 按钮",
            "line": " ../comps/Form/UXC.Form.initCheckAll.js:116"
        },
        {
            "message": "Missing item type\ninput 改变状态时, 全选按钮也改为正确的状态",
            "line": " ../comps/Form/UXC.Form.initCheckAll.js:123"
        },
        {
            "message": "Missing item type\n取当前脚本标签的 src路径",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:2"
        },
        {
            "message": "Missing item type\n监听上一年按钮",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:806"
        },
        {
            "message": "Missing item type\n监听上一月按钮",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:815"
        },
        {
            "message": "Missing item type\n监听下一月按钮",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:824"
        },
        {
            "message": "Missing item type\n监听下一年按钮",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:833"
        },
        {
            "message": "Missing item type\n监听年份按钮, 是否要显示年份列表",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:842"
        },
        {
            "message": "Missing item type\n监听月份按钮, 是否要显示月份列表",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:864"
        },
        {
            "message": "Missing item type\n监听年份列表选择状态",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:878"
        },
        {
            "message": "Missing item type\n监听月份列表选择状态",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:888"
        },
        {
            "message": "Missing item type\n监听日期单元格点击事件",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:898"
        },
        {
            "message": "Missing item type\n监听body点击事件, 点击时隐藏日历控件的年份和月份列表",
            "line": " ../comps/LunarCalendar/UXC.LunarCalendar.js:920"
        },
        {
            "message": "Missing item type\n取当前脚本标签的 src路径",
            "line": " ../comps/Panel/Panel.js:2"
        },
        {
            "message": "Missing item type\n从 HTML 属性 自动执行 UXC.Dialog.alert / UXC.Dialog.confirm",
            "line": " ../comps/Panel/UXC.Dialog.js:129"
        },
        {
            "message": "Missing item type\n响应窗口改变大小和滚动",
            "line": " ../comps/Panel/UXC.Dialog.js:161"
        },
        {
            "message": "Missing item type\n初始化Panel 默认事件",
            "line": " ../comps/Panel/UXC.Panel.js:102"
        },
        {
            "message": "Missing item type\n默认模板",
            "line": " ../comps/Panel/UXC.Panel.js:582"
        },
        {
            "message": "Missing item type\nPanel 的默认模板",
            "line": " ../comps/Panel/UXC.Panel.js:768"
        },
        {
            "message": "Missing item type\n从 HTML 属性 自动执行 UXC.alert / UXC.confirm",
            "line": " ../comps/Panel/UXC.Popup.js:67"
        },
        {
            "message": "Missing item type\n响应窗口改变大小",
            "line": " ../comps/Panel/UXC.Popup.js:96"
        },
        {
            "message": "Missing item type\n初始化数据模型",
            "line": " ../comps/Slider/Slider.js:109"
        },
        {
            "message": "Missing item type\n初始化视图模型( 根据不同的滚动方向, 初始化不同的视图类 )",
            "line": " ../comps/Slider/Slider.js:113"
        },
        {
            "message": "Missing item type\n页面加载后, 自动初始化符合 Slider 规则的 Slider",
            "line": " ../comps/Slider/Slider.js:942"
        },
        {
            "message": "Missing item type\nTab 视图类的实例",
            "line": " ../comps/Tab/Tab.js:142"
        },
        {
            "message": "Missing item type\n判断是否从 layout 下查找内容",
            "line": " ../comps/Tab/Tab.js:364"
        },
        {
            "message": "Missing item type\n自动化初始 Tab 实例\n如果 Tab.autoInit = true, 鼠标移至 Tab 后会自动初始化 Tab",
            "line": " ../comps/Tab/Tab.js:631"
        },
        {
            "message": "Missing item type\n页面加载完毕后, 是否自动初始化 Tips",
            "line": " ../comps/Tips/Tips.js:552"
        },
        {
            "message": "Missing item type\n树的视图模型类",
            "line": " ../comps/Tree/Tree.js:377"
        },
        {
            "message": "Missing item type\n捕获树文件标签的点击事件",
            "line": " ../comps/Tree/Tree.js:623"
        },
        {
            "message": "Missing item type\n捕获树文件夹图标的点击事件",
            "line": " ../comps/Tree/Tree.js:651"
        },
        {
            "message": "Missing item type\n响应表单子对象的 blur事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "line": " ../comps/Valid/Valid.js:310"
        },
        {
            "message": "Missing item type\n响应表单子对象的 change 事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "line": " ../comps/Valid/Valid.js:317"
        },
        {
            "message": "Missing item type\n根据特殊的 datatype 实现不同的计算方法",
            "line": " ../comps/Valid/Valid.js:1162"
        },
        {
            "message": "Missing item type\nTop level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:3"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:10"
        },
        {
            "message": "Missing item type\nUse <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:17"
        },
        {
            "message": "Missing item type\nShow diagnostic messages in the console if set to true",
            "line": " ../plugins/rate/spec/lib/jasmine.js:25"
        },
        {
            "message": "Missing item type\nDefault interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:31"
        },
        {
            "message": "Missing item type\nDefault timeout interval in milliseconds for waitsFor() blocks.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:37"
        },
        {
            "message": "Missing item type\nAllows for bound functions to be compared.  Internal use only.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:50"
        },
        {
            "message": "Missing item type\nGetter for the Jasmine environment. Ensures one gets created",
            "line": " ../plugins/rate/spec/lib/jasmine.js:114"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:122"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:132"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:142"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:152"
        },
        {
            "message": "Missing item type\nPretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:163"
        },
        {
            "message": "Missing item type\nReturns true if the object is a DOM Node.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:175"
        },
        {
            "message": "Missing item type\nReturns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:185"
        },
        {
            "message": "Missing item type\nReturns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:199"
        },
        {
            "message": "Missing item type\nJasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:214"
        },
        {
            "message": "Missing item type\nThe name of the spy, if provided.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:259"
        },
        {
            "message": "Missing item type\nIs this Object a spy?",
            "line": " ../plugins/rate/spec/lib/jasmine.js:263"
        },
        {
            "message": "Missing item type\nThe actual function this spy stubs.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:267"
        },
        {
            "message": "Missing item type\nTracking of the most recent call to the spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:272"
        },
        {
            "message": "Missing item type\nHolds arguments for each call to the spy, indexed by call count",
            "line": " ../plugins/rate/spec/lib/jasmine.js:281"
        },
        {
            "message": "Missing item type\nTells a spy to call through to the actual implemenatation.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:295"
        },
        {
            "message": "Missing item type\nFor setting the return value of a spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:311"
        },
        {
            "message": "Missing item type\nFor throwing an exception when a spy is called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:330"
        },
        {
            "message": "Missing item type\nCalls an alternate implementation when a spy is called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:349"
        },
        {
            "message": "Missing item type\nResets all of a spy's the tracking variables so that it can be used again.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:369"
        },
        {
            "message": "Missing item type\nDetermines whether an object is a spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:415"
        },
        {
            "message": "Missing item type\nCreates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:425"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:443"
        },
        {
            "message": "Missing item type\nFunction that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:453"
        },
        {
            "message": "Missing item type\nCreates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "line": " ../plugins/rate/spec/lib/jasmine.js:473"
        },
        {
            "message": "Missing item type\nCreates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:491"
        },
        {
            "message": "Missing item type\nStarts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:504"
        },
        {
            "message": "Missing item type\nDefines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:517"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:527"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:538"
        },
        {
            "message": "Missing item type\nA function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:550"
        },
        {
            "message": "Missing item type\nA function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:562"
        },
        {
            "message": "Missing item type\nDefines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:574"
        },
        {
            "message": "Missing item type\nDisables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:594"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:633"
        },
        {
            "message": "Missing item type\nDeclare that a child class inherit it's prototype from the parent class.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:638"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:646"
        },
        {
            "message": "Missing item type\nEnvironment for Jasmine",
            "line": " ../plugins/rate/spec/lib/jasmine.js:700"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:738"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:749"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:766"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:773"
        },
        {
            "message": "Missing item type\nRegister a reporter to receive status updates from Jasmine.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:780"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:977"
        },
        {
            "message": "Missing item type\nBlocks are functions with executable code that make up a spec.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1008"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1030"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1132"
        },
        {
            "message": "Missing item type\ntoBe: compares the actual to the expected using ===",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1209"
        },
        {
            "message": "Missing item type\ntoNotBe: compares the actual to the expected using !==",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1217"
        },
        {
            "message": "Missing item type\ntoEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1226"
        },
        {
            "message": "Missing item type\ntoNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1235"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1244"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1254"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1263"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1270"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to null.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1277"
        },
        {
            "message": "Missing item type\nMatcher that boolean not-nots the actual.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1284"
        },
        {
            "message": "Missing item type\nMatcher that boolean nots the actual.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1292"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1300"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1322"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was not called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1325"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1349"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1378"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1381"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is an element in the actual Array.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1398"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is NOT an element in the actual Array.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1407"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1425"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected exception was thrown by the actual.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1442"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1619"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1715"
        },
        {
            "message": "Missing item type\nHolds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1750"
        },
        {
            "message": "Missing item type\nThe total count of results",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1756"
        },
        {
            "message": "Missing item type\nNumber of passed results",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1760"
        },
        {
            "message": "Missing item type\nNumber of failed results",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1764"
        },
        {
            "message": "Missing item type\nWas this suite/spec skipped?",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1768"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1772"
        },
        {
            "message": "Missing item type\nRoll up the result counts.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1778"
        },
        {
            "message": "Missing item type\nAdds a log message.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1789"
        },
        {
            "message": "Missing item type\nGetter for the results: message & results.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1797"
        },
        {
            "message": "Missing item type\nAdds a result, tracking counts (total, passed, & failed)",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1804"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1824"
        },
        {
            "message": "Missing item type\nBase class for pretty printing for expectation results.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1830"
        },
        {
            "message": "Missing item type\nFormats a value in a nice, human-readable string.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1837"
        },
        {
            "message": "Missing item type\nRunner",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2052"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine specification, or test.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2129"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2168"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2191"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2204"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2216"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine suite.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2372"
        },
        {
            "message": "Missing item type\nA block which waits for some condition to become true, with timeout.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2469"
        },
        {
            "message": "Missing item type\n如果 console 不可用, 则生成一个模拟的 console 对象",
            "line": " ../UXC.js:211"
        },
        {
            "message": "Missing item type\n自动识别组件库所在路径",
            "line": " ../UXC.js:217"
        },
        {
            "message": "Missing item type\n取当前脚本标签的 src路径",
            "line": " ../lib.js:2"
        }
    ]
}